var searchIndex = {};
searchIndex['rust_htslib'] = {"items":[[0,"","rust_htslib","Rust-HTSlib provides a high level BAM API.\nReading and writing BAM files is as easy as",null,null],[0,"htslib","","",null,null],[3,"Struct___kstring_t","rust_htslib::htslib","",null,null],[12,"l","","",0,null],[12,"m","","",0,null],[12,"s","","",0,null],[3,"Struct_htsFormat","","",null,null],[12,"category","","",1,null],[12,"format","","",1,null],[12,"version","","",1,null],[12,"compression","","",1,null],[12,"compression_level","","",1,null],[12,"specific","","",1,null],[3,"Struct_Unnamed1","","",null,null],[12,"major","","",2,null],[12,"minor","","",2,null],[3,"Struct_Unnamed2","","",null,null],[12,"isbin_isright_isbe_iscram_dummy","","",3,null],[12,"lineno","","",3,null],[12,"line","","",3,null],[12,"_fn","","",3,null],[12,"fn_aux","","",3,null],[12,"fp","","",3,null],[12,"format","","",3,null],[3,"Union_Unnamed3","","",null,null],[12,"_bindgen_data_","","",4,null],[3,"Struct_Unnamed4","","",null,null],[12,"u","","",5,null],[12,"v","","",5,null],[3,"Struct_Unnamed5","","",null,null],[12,"readres_finished_dummy","","",6,null],[12,"tid","","",6,null],[12,"beg","","",6,null],[12,"end","","",6,null],[12,"n_off","","",6,null],[12,"i","","",6,null],[12,"curr_tid","","",6,null],[12,"curr_beg","","",6,null],[12,"curr_end","","",6,null],[12,"curr_off","","",6,null],[12,"off","","",6,null],[12,"readrec","","",6,null],[12,"bins","","",6,null],[3,"Struct_Unnamed6","","",null,null],[12,"n","","",7,null],[12,"m","","",7,null],[12,"a","","",7,null],[3,"Struct_Unnamed7","","",null,null],[12,"n_targets","","",8,null],[12,"ignore_sam_err","","",8,null],[12,"l_text","","",8,null],[12,"target_len","","",8,null],[12,"cigar_tab","","",8,null],[12,"target_name","","",8,null],[12,"text","","",8,null],[12,"sdict","","",8,null],[3,"Struct_Unnamed8","","",null,null],[12,"tid","","",9,null],[12,"pos","","",9,null],[12,"bin","","",9,null],[12,"qual","","",9,null],[12,"l_qname","","",9,null],[12,"flag","","",9,null],[12,"n_cigar","","",9,null],[12,"l_qseq","","",9,null],[12,"mtid","","",9,null],[12,"mpos","","",9,null],[12,"isize","","",9,null],[3,"Struct_Unnamed9","","",null,null],[12,"core","","",10,null],[12,"l_data","","",10,null],[12,"m_data","","",10,null],[12,"data","","",10,null],[12,"id","","",10,null],[3,"Struct_Unnamed10","","",null,null],[12,"b","","",11,null],[12,"qpos","","",11,null],[12,"indel","","",11,null],[12,"level","","",11,null],[12,"isdel_ishead_istail_isrefskip_isaux","","",11,null],[4,"Struct_BGZF","","",null,null],[4,"Struct_cram_fd","","",null,null],[4,"Struct_hFILE","","",null,null],[4,"Struct___hts_idx_t","","",null,null],[4,"Struct___bam_plp_t","","",null,null],[4,"Struct___bam_mplp_t","","",null,null],[5,"bgzf_close","","",null,null],[7,"hts_verbose","","",null,null],[7,"seq_nt16_table","","",null,null],[7,"seq_nt16_str","","",null,null],[7,"seq_nt16_int","","",null,null],[5,"bgzf_open","","",null,null],[5,"hts_version","","",null,null],[5,"hts_detect_format","","",null,null],[5,"hts_format_description","","",null,null],[5,"hts_open","","",null,null],[5,"hts_hopen","","",null,null],[5,"hts_close","","",null,null],[5,"hts_get_format","","",null,null],[5,"hts_set_opt","","",null,null],[5,"hts_getline","","",null,null],[5,"hts_readlines","","",null,null],[5,"hts_readlist","","",null,null],[5,"hts_set_threads","","",null,null],[5,"hts_set_fai_filename","","",null,null],[5,"hts_idx_init","","",null,null],[5,"hts_idx_destroy","","",null,null],[5,"hts_idx_push","","",null,null],[5,"hts_idx_finish","","",null,null],[5,"hts_idx_save","","",null,null],[5,"hts_idx_load","","",null,null],[5,"hts_idx_get_meta","","",null,null],[5,"hts_idx_set_meta","","",null,null],[5,"hts_idx_get_stat","","",null,null],[5,"hts_idx_get_n_no_coor","","",null,null],[5,"hts_parse_reg","","",null,null],[5,"hts_itr_query","","",null,null],[5,"hts_itr_destroy","","",null,null],[5,"hts_itr_querys","","",null,null],[5,"hts_itr_next","","",null,null],[5,"hts_idx_seqnames","","",null,null],[5,"hts_file_type","","",null,null],[5,"bam_hdr_init","","",null,null],[5,"bam_hdr_read","","",null,null],[5,"bam_hdr_write","","",null,null],[5,"bam_hdr_destroy","","",null,null],[5,"bam_name2id","","",null,null],[5,"bam_hdr_dup","","",null,null],[5,"bam_init1","","",null,null],[5,"bam_destroy1","","",null,null],[5,"bam_read1","","",null,null],[5,"bam_write1","","",null,null],[5,"bam_copy1","","",null,null],[5,"bam_dup1","","",null,null],[5,"bam_cigar2qlen","","",null,null],[5,"bam_cigar2rlen","","",null,null],[5,"bam_endpos","","",null,null],[5,"bam_str2flag","","",null,null],[5,"bam_flag2str","","",null,null],[5,"bam_index_build","","",null,null],[5,"sam_index_load","","",null,null],[5,"sam_itr_queryi","","",null,null],[5,"sam_itr_querys","","",null,null],[5,"sam_open_mode","","",null,null],[5,"sam_hdr_parse","","",null,null],[5,"sam_hdr_read","","",null,null],[5,"sam_hdr_write","","",null,null],[5,"sam_parse1","","",null,null],[5,"sam_format1","","",null,null],[5,"sam_read1","","",null,null],[5,"sam_write1","","",null,null],[5,"bam_aux_get","","",null,null],[5,"bam_aux2i","","",null,null],[5,"bam_aux2f","","",null,null],[5,"bam_aux2A","","",null,null],[5,"bam_aux2Z","","",null,null],[5,"bam_aux_append","","",null,null],[5,"bam_aux_del","","",null,null],[5,"bam_plp_init","","",null,null],[5,"bam_plp_destroy","","",null,null],[5,"bam_plp_push","","",null,null],[5,"bam_plp_next","","",null,null],[5,"bam_plp_auto","","",null,null],[5,"bam_plp_set_maxcnt","","",null,null],[5,"bam_plp_reset","","",null,null],[5,"bam_mplp_init","","",null,null],[5,"bam_mplp_init_overlaps","","",null,null],[5,"bam_mplp_destroy","","",null,null],[5,"bam_mplp_set_maxcnt","","",null,null],[5,"bam_mplp_auto","","",null,null],[11,"clone","","",0,{"inputs":[{"name":"struct___kstring_t"}],"output":{"name":"struct___kstring_t"}}],[11,"default","","",0,{"inputs":[{"name":"struct___kstring_t"}],"output":{"name":"struct___kstring_t"}}],[11,"clone","","",1,{"inputs":[{"name":"struct_htsformat"}],"output":{"name":"struct_htsformat"}}],[11,"default","","",1,{"inputs":[{"name":"struct_htsformat"}],"output":{"name":"struct_htsformat"}}],[11,"clone","","",2,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"struct_unnamed1"}}],[11,"default","","",2,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"struct_unnamed1"}}],[11,"clone","","",3,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"struct_unnamed2"}}],[11,"default","","",3,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"struct_unnamed2"}}],[11,"clone","","",4,{"inputs":[{"name":"union_unnamed3"}],"output":{"name":"union_unnamed3"}}],[11,"bgzf","","",4,null],[11,"cram","","",4,null],[11,"hfile","","",4,null],[11,"voidp","","",4,null],[11,"default","","",4,{"inputs":[{"name":"union_unnamed3"}],"output":{"name":"union_unnamed3"}}],[11,"clone","","",5,{"inputs":[{"name":"struct_unnamed4"}],"output":{"name":"struct_unnamed4"}}],[11,"default","","",5,{"inputs":[{"name":"struct_unnamed4"}],"output":{"name":"struct_unnamed4"}}],[11,"clone","","",6,{"inputs":[{"name":"struct_unnamed5"}],"output":{"name":"struct_unnamed5"}}],[11,"default","","",6,{"inputs":[{"name":"struct_unnamed5"}],"output":{"name":"struct_unnamed5"}}],[11,"clone","","",7,{"inputs":[{"name":"struct_unnamed6"}],"output":{"name":"struct_unnamed6"}}],[11,"default","","",7,{"inputs":[{"name":"struct_unnamed6"}],"output":{"name":"struct_unnamed6"}}],[11,"clone","","",8,{"inputs":[{"name":"struct_unnamed7"}],"output":{"name":"struct_unnamed7"}}],[11,"default","","",8,{"inputs":[{"name":"struct_unnamed7"}],"output":{"name":"struct_unnamed7"}}],[11,"clone","","",9,{"inputs":[{"name":"struct_unnamed8"}],"output":{"name":"struct_unnamed8"}}],[11,"default","","",9,{"inputs":[{"name":"struct_unnamed8"}],"output":{"name":"struct_unnamed8"}}],[11,"clone","","",10,{"inputs":[{"name":"struct_unnamed9"}],"output":{"name":"struct_unnamed9"}}],[11,"default","","",10,{"inputs":[{"name":"struct_unnamed9"}],"output":{"name":"struct_unnamed9"}}],[11,"clone","","",11,{"inputs":[{"name":"struct_unnamed10"}],"output":{"name":"struct_unnamed10"}}],[11,"default","","",11,{"inputs":[{"name":"struct_unnamed10"}],"output":{"name":"struct_unnamed10"}}],[0,"vcf","","",null,null],[3,"Struct___kstring_t","rust_htslib::htslib::vcf","",null,null],[12,"l","","",12,null],[12,"m","","",12,null],[12,"s","","",12,null],[3,"Struct_htsFormat","","",null,null],[12,"category","","",13,null],[12,"format","","",13,null],[12,"version","","",13,null],[12,"compression","","",13,null],[12,"compression_level","","",13,null],[12,"specific","","",13,null],[3,"Struct_Unnamed1","","",null,null],[12,"major","","",14,null],[12,"minor","","",14,null],[3,"Struct_Unnamed2","","",null,null],[12,"isbin_isright_isbe_iscram_dummy","","",15,null],[12,"lineno","","",15,null],[12,"line","","",15,null],[12,"_fn","","",15,null],[12,"fn_aux","","",15,null],[12,"fp","","",15,null],[12,"format","","",15,null],[3,"Union_Unnamed3","","",null,null],[12,"_bindgen_data_","","",16,null],[3,"Struct_Unnamed4","","",null,null],[12,"u","","",17,null],[12,"v","","",17,null],[3,"Struct_Unnamed5","","",null,null],[12,"readres_finished_dummy","","",18,null],[12,"tid","","",18,null],[12,"beg","","",18,null],[12,"end","","",18,null],[12,"n_off","","",18,null],[12,"i","","",18,null],[12,"curr_tid","","",18,null],[12,"curr_beg","","",18,null],[12,"curr_end","","",18,null],[12,"curr_off","","",18,null],[12,"off","","",18,null],[12,"readrec","","",18,null],[12,"bins","","",18,null],[3,"Struct_Unnamed6","","",null,null],[12,"n","","",19,null],[12,"m","","",19,null],[12,"a","","",19,null],[3,"Struct_Unnamed7","","",null,null],[12,"__val","","",20,null],[3,"Union_wait","","",null,null],[12,"_bindgen_data_","","",21,null],[3,"Struct_Unnamed8","","",null,null],[12,"_bindgen_bitfield_1_","","",22,null],[3,"Struct_Unnamed9","","",null,null],[12,"_bindgen_bitfield_1_","","",23,null],[3,"Union_Unnamed10","","",null,null],[12,"_bindgen_data_","","",24,null],[3,"Struct_Unnamed11","","",null,null],[12,"quot","","",25,null],[12,"rem","","",25,null],[3,"Struct_Unnamed12","","",null,null],[12,"quot","","",26,null],[12,"rem","","",26,null],[3,"Struct_Unnamed13","","",null,null],[12,"quot","","",27,null],[12,"rem","","",27,null],[3,"Struct_Unnamed14","","",null,null],[12,"__val","","",28,null],[3,"Struct_timespec","","",null,null],[12,"tv_sec","","",29,null],[12,"tv_nsec","","",29,null],[3,"Struct_timeval","","",null,null],[12,"tv_sec","","",30,null],[12,"tv_usec","","",30,null],[3,"Struct_Unnamed15","","",null,null],[12,"__fds_bits","","",31,null],[3,"Union_pthread_attr_t","","",null,null],[12,"_bindgen_data_","","",32,null],[3,"Struct___pthread_internal_list","","",null,null],[12,"__prev","","",33,null],[12,"__next","","",33,null],[3,"Union_Unnamed16","","",null,null],[12,"_bindgen_data_","","",34,null],[3,"Struct___pthread_mutex_s","","",null,null],[12,"__lock","","",35,null],[12,"__count","","",35,null],[12,"__owner","","",35,null],[12,"__nusers","","",35,null],[12,"__kind","","",35,null],[12,"__spins","","",35,null],[12,"__elision","","",35,null],[12,"__list","","",35,null],[3,"Union_Unnamed17","","",null,null],[12,"_bindgen_data_","","",36,null],[3,"Union_Unnamed18","","",null,null],[12,"_bindgen_data_","","",37,null],[3,"Struct_Unnamed19","","",null,null],[12,"__lock","","",38,null],[12,"__futex","","",38,null],[12,"__total_seq","","",38,null],[12,"__wakeup_seq","","",38,null],[12,"__woken_seq","","",38,null],[12,"__mutex","","",38,null],[12,"__nwaiters","","",38,null],[12,"__broadcast_seq","","",38,null],[3,"Union_Unnamed20","","",null,null],[12,"_bindgen_data_","","",39,null],[3,"Union_Unnamed21","","",null,null],[12,"_bindgen_data_","","",40,null],[3,"Struct_Unnamed22","","",null,null],[12,"__lock","","",41,null],[12,"__nr_readers","","",41,null],[12,"__readers_wakeup","","",41,null],[12,"__writer_wakeup","","",41,null],[12,"__nr_readers_queued","","",41,null],[12,"__nr_writers_queued","","",41,null],[12,"__writer","","",41,null],[12,"__shared","","",41,null],[12,"__pad1","","",41,null],[12,"__pad2","","",41,null],[12,"__flags","","",41,null],[3,"Union_Unnamed23","","",null,null],[12,"_bindgen_data_","","",42,null],[3,"Union_Unnamed24","","",null,null],[12,"_bindgen_data_","","",43,null],[3,"Union_Unnamed25","","",null,null],[12,"_bindgen_data_","","",44,null],[3,"Struct_random_data","","",null,null],[12,"fptr","","",45,null],[12,"rptr","","",45,null],[12,"state","","",45,null],[12,"rand_type","","",45,null],[12,"rand_deg","","",45,null],[12,"rand_sep","","",45,null],[12,"end_ptr","","",45,null],[3,"Struct_drand48_data","","",null,null],[12,"__x","","",46,null],[12,"__old_x","","",46,null],[12,"__c","","",46,null],[12,"__init","","",46,null],[12,"__a","","",46,null],[3,"Struct___locale_struct","","",null,null],[12,"__locales","","",47,null],[12,"__ctype_b","","",47,null],[12,"__ctype_tolower","","",47,null],[12,"__ctype_toupper","","",47,null],[12,"__names","","",47,null],[3,"Struct_Unnamed26","","",null,null],[12,"__count","","",48,null],[12,"__value","","",48,null],[3,"Union_Unnamed27","","",null,null],[12,"_bindgen_data_","","",49,null],[3,"Struct_Unnamed28","","",null,null],[12,"__pos","","",50,null],[12,"__state","","",50,null],[3,"Struct_Unnamed29","","",null,null],[12,"__pos","","",51,null],[12,"__state","","",51,null],[3,"Struct__IO_marker","","",null,null],[12,"_next","","",52,null],[12,"_sbuf","","",52,null],[12,"_pos","","",52,null],[3,"Struct__IO_FILE","","",null,null],[12,"_flags","","",53,null],[12,"_IO_read_ptr","","",53,null],[12,"_IO_read_end","","",53,null],[12,"_IO_read_base","","",53,null],[12,"_IO_write_base","","",53,null],[12,"_IO_write_ptr","","",53,null],[12,"_IO_write_end","","",53,null],[12,"_IO_buf_base","","",53,null],[12,"_IO_buf_end","","",53,null],[12,"_IO_save_base","","",53,null],[12,"_IO_backup_base","","",53,null],[12,"_IO_save_end","","",53,null],[12,"_markers","","",53,null],[12,"_chain","","",53,null],[12,"_fileno","","",53,null],[12,"_flags2","","",53,null],[12,"_old_offset","","",53,null],[12,"_cur_column","","",53,null],[12,"_vtable_offset","","",53,null],[12,"_shortbuf","","",53,null],[12,"_lock","","",53,null],[12,"_offset","","",53,null],[12,"__pad1","","",53,null],[12,"__pad2","","",53,null],[12,"__pad3","","",53,null],[12,"__pad4","","",53,null],[12,"__pad5","","",53,null],[12,"_mode","","",53,null],[12,"_unused2","","",53,null],[3,"Struct_Unnamed30","","",null,null],[12,"tab","","",54,null],[12,"sep","","",54,null],[12,"finished","","",54,null],[12,"p","","",54,null],[3,"Struct_Unnamed31","","",null,null],[12,"_type","","",55,null],[12,"key","","",55,null],[12,"value","","",55,null],[12,"nkeys","","",55,null],[12,"keys","","",55,null],[12,"vals","","",55,null],[3,"Struct_Unnamed32","","",null,null],[12,"info","","",56,null],[12,"hrec","","",56,null],[12,"id","","",56,null],[3,"Struct_Unnamed33","","",null,null],[12,"key","","",57,null],[12,"val","","",57,null],[3,"Struct_Unnamed34","","",null,null],[12,"n","","",58,null],[12,"id","","",58,null],[12,"dict","","",58,null],[12,"samples","","",58,null],[12,"hrec","","",58,null],[12,"nhrec","","",58,null],[12,"dirty","","",58,null],[12,"ntransl","","",58,null],[12,"transl","","",58,null],[12,"nsamples_ori","","",58,null],[12,"keep_samples","","",58,null],[12,"mem","","",58,null],[3,"Struct_Unnamed35","","",null,null],[12,"_type","","",59,null],[12,"n","","",59,null],[3,"Struct_Unnamed36","","",null,null],[12,"id","","",60,null],[12,"n","","",60,null],[12,"size","","",60,null],[12,"_type","","",60,null],[12,"p","","",60,null],[12,"p_len","","",60,null],[12,"p_off_p_free","","",60,null],[3,"Struct_Unnamed37","","",null,null],[12,"key","","",61,null],[12,"_type","","",61,null],[12,"len","","",61,null],[12,"v1","","",61,null],[12,"vptr","","",61,null],[12,"vptr_len","","",61,null],[12,"vptr_off_vptr_free","","",61,null],[3,"Union_Unnamed38","","",null,null],[12,"_bindgen_data_","","",62,null],[3,"Struct_Unnamed39","","",null,null],[12,"m_fmt","","",63,null],[12,"m_info","","",63,null],[12,"m_id","","",63,null],[12,"m_als","","",63,null],[12,"m_allele","","",63,null],[12,"m_flt","","",63,null],[12,"n_flt","","",63,null],[12,"flt","","",63,null],[12,"id","","",63,null],[12,"als","","",63,null],[12,"allele","","",63,null],[12,"info","","",63,null],[12,"fmt","","",63,null],[12,"var","","",63,null],[12,"n_var","","",63,null],[12,"var_type","","",63,null],[12,"shared_dirty","","",63,null],[12,"indiv_dirty","","",63,null],[3,"Struct_Unnamed40","","",null,null],[12,"rid","","",64,null],[12,"pos","","",64,null],[12,"rlen","","",64,null],[12,"qual","","",64,null],[12,"n_info","","",64,null],[12,"n_allele","","",64,null],[12,"n_fmt_n_sample","","",64,null],[12,"shared","","",64,null],[12,"indiv","","",64,null],[12,"d","","",64,null],[12,"max_unpack","","",64,null],[12,"unpacked","","",64,null],[12,"unpack_size","","",64,null],[12,"errcode","","",64,null],[3,"Struct___va_list_tag","","",null,null],[12,"gp_offset","","",65,null],[12,"fp_offset","","",65,null],[12,"overflow_arg_area","","",65,null],[12,"reg_save_area","","",65,null],[4,"Struct_BGZF","","",null,null],[4,"Struct_cram_fd","","",null,null],[4,"Struct_hFILE","","",null,null],[4,"Struct___hts_idx_t","","",null,null],[4,"Struct___locale_data","","",null,null],[4,"Struct__IO_jump_t","","",null,null],[4,"Struct__IO_FILE_plus","","",null,null],[5,"bcf_read1_core","","",null,null],[7,"hts_verbose","","",null,null],[7,"seq_nt16_table","","",null,null],[7,"seq_nt16_str","","",null,null],[7,"seq_nt16_int","","",null,null],[7,"_IO_2_1_stdin_","","",null,null],[7,"_IO_2_1_stdout_","","",null,null],[7,"_IO_2_1_stderr_","","",null,null],[7,"stdin","","",null,null],[7,"stdout","","",null,null],[7,"stderr","","",null,null],[7,"sys_nerr","","",null,null],[7,"sys_errlist","","",null,null],[7,"bcf_type_shift","","",null,null],[7,"bcf_float_vector_end","","",null,null],[7,"bcf_float_missing","","",null,null],[5,"__assert_fail","","",null,null],[5,"__assert_perror_fail","","",null,null],[5,"__assert","","",null,null],[5,"hts_version","","",null,null],[5,"hts_detect_format","","",null,null],[5,"hts_format_description","","",null,null],[5,"hts_open","","",null,null],[5,"hts_hopen","","",null,null],[5,"hts_close","","",null,null],[5,"hts_get_format","","",null,null],[5,"hts_set_opt","","",null,null],[5,"hts_getline","","",null,null],[5,"hts_readlines","","",null,null],[5,"hts_readlist","","",null,null],[5,"hts_set_threads","","",null,null],[5,"hts_set_fai_filename","","",null,null],[5,"hts_idx_init","","",null,null],[5,"hts_idx_destroy","","",null,null],[5,"hts_idx_push","","",null,null],[5,"hts_idx_finish","","",null,null],[5,"hts_idx_save","","",null,null],[5,"hts_idx_load","","",null,null],[5,"hts_idx_get_meta","","",null,null],[5,"hts_idx_set_meta","","",null,null],[5,"hts_idx_get_stat","","",null,null],[5,"hts_idx_get_n_no_coor","","",null,null],[5,"hts_parse_reg","","",null,null],[5,"hts_itr_query","","",null,null],[5,"hts_itr_destroy","","",null,null],[5,"hts_itr_querys","","",null,null],[5,"hts_itr_next","","",null,null],[5,"hts_idx_seqnames","","",null,null],[5,"hts_file_type","","",null,null],[5,"__ctype_get_mb_cur_max","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"atol","","",null,null],[5,"atoll","","",null,null],[5,"strtod","","",null,null],[5,"strtof","","",null,null],[5,"strtold","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"strtoq","","",null,null],[5,"strtouq","","",null,null],[5,"strtoll","","",null,null],[5,"strtoull","","",null,null],[5,"l64a","","",null,null],[5,"a64l","","",null,null],[5,"select","","",null,null],[5,"pselect","","",null,null],[5,"gnu_dev_major","","",null,null],[5,"gnu_dev_minor","","",null,null],[5,"gnu_dev_makedev","","",null,null],[5,"random","","",null,null],[5,"srandom","","",null,null],[5,"initstate","","",null,null],[5,"setstate","","",null,null],[5,"random_r","","",null,null],[5,"srandom_r","","",null,null],[5,"initstate_r","","",null,null],[5,"setstate_r","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"rand_r","","",null,null],[5,"drand48","","",null,null],[5,"erand48","","",null,null],[5,"lrand48","","",null,null],[5,"nrand48","","",null,null],[5,"mrand48","","",null,null],[5,"jrand48","","",null,null],[5,"srand48","","",null,null],[5,"seed48","","",null,null],[5,"lcong48","","",null,null],[5,"drand48_r","","",null,null],[5,"erand48_r","","",null,null],[5,"lrand48_r","","",null,null],[5,"nrand48_r","","",null,null],[5,"mrand48_r","","",null,null],[5,"jrand48_r","","",null,null],[5,"srand48_r","","",null,null],[5,"seed48_r","","",null,null],[5,"lcong48_r","","",null,null],[5,"malloc","","",null,null],[5,"calloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"cfree","","",null,null],[5,"alloca","","",null,null],[5,"valloc","","",null,null],[5,"posix_memalign","","",null,null],[5,"abort","","",null,null],[5,"atexit","","",null,null],[5,"on_exit","","",null,null],[5,"exit","","",null,null],[5,"_Exit","","",null,null],[5,"getenv","","",null,null],[5,"putenv","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"clearenv","","",null,null],[5,"mktemp","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"system","","",null,null],[5,"realpath","","",null,null],[5,"bsearch","","",null,null],[5,"qsort","","",null,null],[5,"abs","","",null,null],[5,"labs","","",null,null],[5,"llabs","","",null,null],[5,"div","","",null,null],[5,"ldiv","","",null,null],[5,"lldiv","","",null,null],[5,"ecvt","","",null,null],[5,"fcvt","","",null,null],[5,"gcvt","","",null,null],[5,"qecvt","","",null,null],[5,"qfcvt","","",null,null],[5,"qgcvt","","",null,null],[5,"ecvt_r","","",null,null],[5,"fcvt_r","","",null,null],[5,"qecvt_r","","",null,null],[5,"qfcvt_r","","",null,null],[5,"mblen","","",null,null],[5,"mbtowc","","",null,null],[5,"wctomb","","",null,null],[5,"mbstowcs","","",null,null],[5,"wcstombs","","",null,null],[5,"rpmatch","","",null,null],[5,"getsubopt","","",null,null],[5,"getloadavg","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memccpy","","",null,null],[5,"memset","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strxfrm","","",null,null],[5,"strcoll_l","","",null,null],[5,"strxfrm_l","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strcspn","","",null,null],[5,"strspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strtok","","",null,null],[5,"__strtok_r","","",null,null],[5,"strtok_r","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strerror_r","","",null,null],[5,"strerror_l","","",null,null],[5,"__bzero","","",null,null],[5,"bcopy","","",null,null],[5,"bzero","","",null,null],[5,"bcmp","","",null,null],[5,"index","","",null,null],[5,"rindex","","",null,null],[5,"ffs","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strsep","","",null,null],[5,"strsignal","","",null,null],[5,"__stpcpy","","",null,null],[5,"stpcpy","","",null,null],[5,"__stpncpy","","",null,null],[5,"stpncpy","","",null,null],[5,"__underflow","","",null,null],[5,"__uflow","","",null,null],[5,"__overflow","","",null,null],[5,"_IO_getc","","",null,null],[5,"_IO_putc","","",null,null],[5,"_IO_feof","","",null,null],[5,"_IO_ferror","","",null,null],[5,"_IO_peekc_locked","","",null,null],[5,"_IO_flockfile","","",null,null],[5,"_IO_funlockfile","","",null,null],[5,"_IO_ftrylockfile","","",null,null],[5,"_IO_vfscanf","","",null,null],[5,"_IO_vfprintf","","",null,null],[5,"_IO_padn","","",null,null],[5,"_IO_sgetn","","",null,null],[5,"_IO_seekoff","","",null,null],[5,"_IO_seekpos","","",null,null],[5,"_IO_free_backup_area","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"renameat","","",null,null],[5,"tmpfile","","",null,null],[5,"tmpnam","","",null,null],[5,"tmpnam_r","","",null,null],[5,"tempnam","","",null,null],[5,"fclose","","",null,null],[5,"fflush","","",null,null],[5,"fflush_unlocked","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fdopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"setbuf","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuffer","","",null,null],[5,"setlinebuf","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"sprintf","","",null,null],[5,"vfprintf","","",null,null],[5,"vprintf","","",null,null],[5,"vsprintf","","",null,null],[5,"snprintf","","",null,null],[5,"vsnprintf","","",null,null],[5,"vdprintf","","",null,null],[5,"dprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"vfscanf","","",null,null],[5,"vscanf","","",null,null],[5,"vsscanf","","",null,null],[5,"fgetc","","",null,null],[5,"getc","","",null,null],[5,"getchar","","",null,null],[5,"getc_unlocked","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"fgetc_unlocked","","",null,null],[5,"fputc","","",null,null],[5,"putc","","",null,null],[5,"putchar","","",null,null],[5,"fputc_unlocked","","",null,null],[5,"putc_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"getw","","",null,null],[5,"putw","","",null,null],[5,"fgets","","",null,null],[5,"gets","","",null,null],[5,"__getdelim","","",null,null],[5,"getdelim","","",null,null],[5,"getline","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fread_unlocked","","",null,null],[5,"fwrite_unlocked","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"clearerr","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr_unlocked","","",null,null],[5,"feof_unlocked","","",null,null],[5,"ferror_unlocked","","",null,null],[5,"perror","","",null,null],[5,"fileno","","",null,null],[5,"fileno_unlocked","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"ctermid","","",null,null],[5,"flockfile","","",null,null],[5,"ftrylockfile","","",null,null],[5,"funlockfile","","",null,null],[5,"kvsprintf","","",null,null],[5,"ksprintf","","",null,null],[5,"ksplit_core","","",null,null],[5,"kstrstr","","",null,null],[5,"kstrnstr","","",null,null],[5,"kmemmem","","",null,null],[5,"kstrtok","","",null,null],[5,"bcf_hdr_init","","",null,null],[5,"bcf_hdr_destroy","","",null,null],[5,"bcf_init","","",null,null],[5,"bcf_destroy","","",null,null],[5,"bcf_empty","","",null,null],[5,"bcf_clear","","",null,null],[5,"bcf_hdr_read","","",null,null],[5,"bcf_hdr_set_samples","","",null,null],[5,"bcf_subset_format","","",null,null],[5,"bcf_hdr_write","","",null,null],[5,"vcf_parse","","",null,null],[5,"vcf_format","","",null,null],[5,"bcf_read","","",null,null],[5,"bcf_unpack","","",null,null],[5,"bcf_dup","","",null,null],[5,"bcf_copy","","",null,null],[5,"bcf_write","","",null,null],[5,"vcf_hdr_read","","",null,null],[5,"vcf_hdr_write","","",null,null],[5,"vcf_read","","",null,null],[5,"vcf_write","","",null,null],[5,"bcf_readrec","","",null,null],[5,"bcf_hdr_dup","","",null,null],[5,"bcf_hdr_combine","","",null,null],[5,"bcf_hdr_add_sample","","",null,null],[5,"bcf_hdr_set","","",null,null],[5,"bcf_hdr_fmt_text","","",null,null],[5,"bcf_hdr_append","","",null,null],[5,"bcf_hdr_printf","","",null,null],[5,"bcf_hdr_get_version","","",null,null],[5,"bcf_hdr_set_version","","",null,null],[5,"bcf_hdr_remove","","",null,null],[5,"bcf_hdr_subset","","",null,null],[5,"bcf_hdr_seqnames","","",null,null],[5,"bcf_hdr_parse","","",null,null],[5,"bcf_hdr_sync","","",null,null],[5,"bcf_hdr_parse_line","","",null,null],[5,"bcf_hrec_format","","",null,null],[5,"bcf_hdr_add_hrec","","",null,null],[5,"bcf_hdr_get_hrec","","",null,null],[5,"bcf_hrec_dup","","",null,null],[5,"bcf_hrec_add_key","","",null,null],[5,"bcf_hrec_set_val","","",null,null],[5,"bcf_hrec_find_key","","",null,null],[5,"hrec_add_idx","","",null,null],[5,"bcf_hrec_destroy","","",null,null],[5,"bcf_subset","","",null,null],[5,"bcf_translate","","",null,null],[5,"bcf_get_variant_types","","",null,null],[5,"bcf_get_variant_type","","",null,null],[5,"bcf_is_snp","","",null,null],[5,"bcf_update_filter","","",null,null],[5,"bcf_add_filter","","",null,null],[5,"bcf_remove_filter","","",null,null],[5,"bcf_has_filter","","",null,null],[5,"bcf_update_alleles","","",null,null],[5,"bcf_update_alleles_str","","",null,null],[5,"bcf_update_id","","",null,null],[5,"bcf_update_info","","",null,null],[5,"bcf_update_format_string","","",null,null],[5,"bcf_update_format","","",null,null],[5,"bcf_get_fmt","","",null,null],[5,"bcf_get_info","","",null,null],[5,"bcf_get_fmt_id","","",null,null],[5,"bcf_get_info_id","","",null,null],[5,"bcf_get_info_values","","",null,null],[5,"bcf_get_format_string","","",null,null],[5,"bcf_get_format_values","","",null,null],[5,"bcf_hdr_id2int","","",null,null],[5,"bcf_fmt_array","","",null,null],[5,"bcf_fmt_sized_array","","",null,null],[5,"bcf_enc_vchar","","",null,null],[5,"bcf_enc_vint","","",null,null],[5,"bcf_enc_vfloat","","",null,null],[5,"bcf_index_build","","",null,null],[6,"__int128_t","","",null,null],[6,"__uint128_t","","",null,null],[6,"__builtin_va_list","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"size_t","","",null,null],[6,"wchar_t","","",null,null],[6,"BGZF","","",null,null],[6,"kstring_t","","",null,null],[6,"Enum_htsFormatCategory","","",null,null],[6,"Enum_htsExactFormat","","",null,null],[6,"Enum_htsCompression","","",null,null],[6,"htsFormat","","",null,null],[6,"htsFile","","",null,null],[6,"Enum_sam_fields","","",null,null],[6,"Enum_cram_option","","",null,null],[6,"hts_idx_t","","",null,null],[6,"hts_pair64_t","","",null,null],[6,"hts_readrec_func","","",null,null],[6,"hts_itr_t","","",null,null],[6,"hts_name2id_f","","",null,null],[6,"hts_id2name_f","","",null,null],[6,"hts_itr_query_func","","",null,null],[6,"__u_char","","",null,null],[6,"__u_short","","",null,null],[6,"__u_int","","",null,null],[6,"__u_long","","",null,null],[6,"__int8_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__quad_t","","",null,null],[6,"__u_quad_t","","",null,null],[6,"__dev_t","","",null,null],[6,"__uid_t","","",null,null],[6,"__gid_t","","",null,null],[6,"__ino_t","","",null,null],[6,"__ino64_t","","",null,null],[6,"__mode_t","","",null,null],[6,"__nlink_t","","",null,null],[6,"__off_t","","",null,null],[6,"__off64_t","","",null,null],[6,"__pid_t","","",null,null],[6,"__fsid_t","","",null,null],[6,"__clock_t","","",null,null],[6,"__rlim_t","","",null,null],[6,"__rlim64_t","","",null,null],[6,"__id_t","","",null,null],[6,"__time_t","","",null,null],[6,"__useconds_t","","",null,null],[6,"__suseconds_t","","",null,null],[6,"__daddr_t","","",null,null],[6,"__key_t","","",null,null],[6,"__clockid_t","","",null,null],[6,"__timer_t","","",null,null],[6,"__blksize_t","","",null,null],[6,"__blkcnt_t","","",null,null],[6,"__blkcnt64_t","","",null,null],[6,"__fsblkcnt_t","","",null,null],[6,"__fsblkcnt64_t","","",null,null],[6,"__fsfilcnt_t","","",null,null],[6,"__fsfilcnt64_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"__ssize_t","","",null,null],[6,"__syscall_slong_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__loff_t","","",null,null],[6,"__qaddr_t","","",null,null],[6,"__caddr_t","","",null,null],[6,"__intptr_t","","",null,null],[6,"__socklen_t","","",null,null],[6,"__WAIT_STATUS","","",null,null],[6,"div_t","","",null,null],[6,"ldiv_t","","",null,null],[6,"lldiv_t","","",null,null],[6,"u_char","","",null,null],[6,"u_short","","",null,null],[6,"u_int","","",null,null],[6,"u_long","","",null,null],[6,"quad_t","","",null,null],[6,"u_quad_t","","",null,null],[6,"fsid_t","","",null,null],[6,"loff_t","","",null,null],[6,"ino_t","","",null,null],[6,"dev_t","","",null,null],[6,"gid_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"uid_t","","",null,null],[6,"off_t","","",null,null],[6,"pid_t","","",null,null],[6,"id_t","","",null,null],[6,"ssize_t","","",null,null],[6,"daddr_t","","",null,null],[6,"caddr_t","","",null,null],[6,"key_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"clockid_t","","",null,null],[6,"timer_t","","",null,null],[6,"ulong","","",null,null],[6,"ushort","","",null,null],[6,"_uint","","",null,null],[6,"u_int8_t","","",null,null],[6,"u_int16_t","","",null,null],[6,"u_int32_t","","",null,null],[6,"u_int64_t","","",null,null],[6,"register_t","","",null,null],[6,"__sig_atomic_t","","",null,null],[6,"__sigset_t","","",null,null],[6,"sigset_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__fd_mask","","",null,null],[6,"fd_set","","",null,null],[6,"fd_mask","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"pthread_t","","",null,null],[6,"pthread_attr_t","","",null,null],[6,"__pthread_list_t","","",null,null],[6,"pthread_mutex_t","","",null,null],[6,"pthread_mutexattr_t","","",null,null],[6,"pthread_cond_t","","",null,null],[6,"pthread_condattr_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"pthread_once_t","","",null,null],[6,"pthread_rwlock_t","","",null,null],[6,"pthread_rwlockattr_t","","",null,null],[6,"pthread_spinlock_t","","",null,null],[6,"pthread_barrier_t","","",null,null],[6,"pthread_barrierattr_t","","",null,null],[6,"__compar_fn_t","","",null,null],[6,"__locale_t","","",null,null],[6,"locale_t","","",null,null],[6,"__gnuc_va_list","","",null,null],[6,"va_list","","",null,null],[6,"FILE","","",null,null],[6,"__FILE","","",null,null],[6,"__mbstate_t","","",null,null],[6,"_G_fpos_t","","",null,null],[6,"_G_fpos64_t","","",null,null],[6,"_IO_lock_t","","",null,null],[6,"Enum___codecvt_result","","",null,null],[6,"_IO_FILE","","",null,null],[6,"__io_read_fn","","",null,null],[6,"__io_write_fn","","",null,null],[6,"__io_seek_fn","","",null,null],[6,"__io_close_fn","","",null,null],[6,"fpos_t","","",null,null],[6,"ks_tokaux_t","","",null,null],[6,"bcf_hrec_t","","",null,null],[6,"bcf_idinfo_t","","",null,null],[6,"bcf_idpair_t","","",null,null],[6,"bcf_hdr_t","","",null,null],[6,"variant_t","","",null,null],[6,"bcf_fmt_t","","",null,null],[6,"bcf_info_t","","",null,null],[6,"bcf_dec_t","","",null,null],[6,"bcf1_t","","",null,null],[6,"vcfFile","","",null,null],[6,"__va_list_tag","","",null,null],[17,"BCF_HL_FLT","","",null,null],[17,"BCF_HL_INFO","","",null,null],[17,"BCF_HL_FMT","","",null,null],[17,"BCF_HL_CTG","","",null,null],[17,"BCF_HL_STR","","",null,null],[17,"BCF_HL_GEN","","",null,null],[17,"BCF_HT_FLAG","","",null,null],[17,"BCF_HT_INT","","",null,null],[17,"BCF_HT_REAL","","",null,null],[17,"BCF_HT_STR","","",null,null],[17,"BCF_UN_STR","","",null,null],[17,"BCF_UN_FLT","","",null,null],[17,"BCF_DT_ID","","",null,null],[17,"BCF_DT_CTG","","",null,null],[17,"BCF_DT_SAMPLE","","",null,null],[17,"unknown_category","","",null,null],[17,"sequence_data","","",null,null],[17,"variant_data","","",null,null],[17,"index_file","","",null,null],[17,"region_list","","",null,null],[17,"category_maximum","","",null,null],[17,"unknown_format","","",null,null],[17,"binary_format","","",null,null],[17,"text_format","","",null,null],[17,"sam","","",null,null],[17,"bam","","",null,null],[17,"bai","","",null,null],[17,"cram","","",null,null],[17,"crai","","",null,null],[17,"vcf","","",null,null],[17,"bcf","","",null,null],[17,"csi","","",null,null],[17,"gzi","","",null,null],[17,"tbi","","",null,null],[17,"bed","","",null,null],[17,"format_maximum","","",null,null],[17,"no_compression","","",null,null],[17,"gzip","","",null,null],[17,"bgzf","","",null,null],[17,"custom","","",null,null],[17,"compression_maximum","","",null,null],[17,"SAM_QNAME","","",null,null],[17,"SAM_FLAG","","",null,null],[17,"SAM_RNAME","","",null,null],[17,"SAM_POS","","",null,null],[17,"SAM_MAPQ","","",null,null],[17,"SAM_CIGAR","","",null,null],[17,"SAM_RNEXT","","",null,null],[17,"SAM_PNEXT","","",null,null],[17,"SAM_TLEN","","",null,null],[17,"SAM_SEQ","","",null,null],[17,"SAM_QUAL","","",null,null],[17,"SAM_AUX","","",null,null],[17,"SAM_RGAUX","","",null,null],[17,"CRAM_OPT_DECODE_MD","","",null,null],[17,"CRAM_OPT_PREFIX","","",null,null],[17,"CRAM_OPT_VERBOSITY","","",null,null],[17,"CRAM_OPT_SEQS_PER_SLICE","","",null,null],[17,"CRAM_OPT_SLICES_PER_CONTAINER","","",null,null],[17,"CRAM_OPT_RANGE","","",null,null],[17,"CRAM_OPT_VERSION","","",null,null],[17,"CRAM_OPT_EMBED_REF","","",null,null],[17,"CRAM_OPT_IGNORE_MD5","","",null,null],[17,"CRAM_OPT_REFERENCE","","",null,null],[17,"CRAM_OPT_MULTI_SEQ_PER_SLICE","","",null,null],[17,"CRAM_OPT_NO_REF","","",null,null],[17,"CRAM_OPT_USE_BZIP2","","",null,null],[17,"CRAM_OPT_SHARED_REF","","",null,null],[17,"CRAM_OPT_NTHREADS","","",null,null],[17,"CRAM_OPT_THREAD_POOL","","",null,null],[17,"CRAM_OPT_USE_LZMA","","",null,null],[17,"CRAM_OPT_USE_RANS","","",null,null],[17,"CRAM_OPT_REQUIRED_FIELDS","","",null,null],[17,"__codecvt_ok","","",null,null],[17,"__codecvt_partial","","",null,null],[17,"__codecvt_error","","",null,null],[17,"__codecvt_noconv","","",null,null],[11,"clone","","",12,{"inputs":[{"name":"struct___kstring_t"}],"output":{"name":"struct___kstring_t"}}],[11,"default","","",12,{"inputs":[{"name":"struct___kstring_t"}],"output":{"name":"struct___kstring_t"}}],[11,"clone","","",13,{"inputs":[{"name":"struct_htsformat"}],"output":{"name":"struct_htsformat"}}],[11,"default","","",13,{"inputs":[{"name":"struct_htsformat"}],"output":{"name":"struct_htsformat"}}],[11,"clone","","",14,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"struct_unnamed1"}}],[11,"default","","",14,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"struct_unnamed1"}}],[11,"clone","","",15,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"struct_unnamed2"}}],[11,"default","","",15,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"struct_unnamed2"}}],[11,"clone","","",16,{"inputs":[{"name":"union_unnamed3"}],"output":{"name":"union_unnamed3"}}],[11,"bgzf","","",16,null],[11,"cram","","",16,null],[11,"hfile","","",16,null],[11,"voidp","","",16,null],[11,"default","","",16,{"inputs":[{"name":"union_unnamed3"}],"output":{"name":"union_unnamed3"}}],[11,"clone","","",17,{"inputs":[{"name":"struct_unnamed4"}],"output":{"name":"struct_unnamed4"}}],[11,"default","","",17,{"inputs":[{"name":"struct_unnamed4"}],"output":{"name":"struct_unnamed4"}}],[11,"clone","","",18,{"inputs":[{"name":"struct_unnamed5"}],"output":{"name":"struct_unnamed5"}}],[11,"default","","",18,{"inputs":[{"name":"struct_unnamed5"}],"output":{"name":"struct_unnamed5"}}],[11,"clone","","",19,{"inputs":[{"name":"struct_unnamed6"}],"output":{"name":"struct_unnamed6"}}],[11,"default","","",19,{"inputs":[{"name":"struct_unnamed6"}],"output":{"name":"struct_unnamed6"}}],[11,"clone","","",20,{"inputs":[{"name":"struct_unnamed7"}],"output":{"name":"struct_unnamed7"}}],[11,"default","","",20,{"inputs":[{"name":"struct_unnamed7"}],"output":{"name":"struct_unnamed7"}}],[11,"clone","","",21,{"inputs":[{"name":"union_wait"}],"output":{"name":"union_wait"}}],[11,"w_status","","",21,null],[11,"__wait_terminated","","",21,null],[11,"__wait_stopped","","",21,null],[11,"default","","",21,{"inputs":[{"name":"union_wait"}],"output":{"name":"union_wait"}}],[11,"clone","","",22,{"inputs":[{"name":"struct_unnamed8"}],"output":{"name":"struct_unnamed8"}}],[11,"default","","",22,{"inputs":[{"name":"struct_unnamed8"}],"output":{"name":"struct_unnamed8"}}],[11,"clone","","",23,{"inputs":[{"name":"struct_unnamed9"}],"output":{"name":"struct_unnamed9"}}],[11,"default","","",23,{"inputs":[{"name":"struct_unnamed9"}],"output":{"name":"struct_unnamed9"}}],[11,"clone","","",24,{"inputs":[{"name":"union_unnamed10"}],"output":{"name":"union_unnamed10"}}],[11,"__uptr","","",24,null],[11,"__iptr","","",24,null],[11,"default","","",24,{"inputs":[{"name":"union_unnamed10"}],"output":{"name":"union_unnamed10"}}],[11,"clone","","",25,{"inputs":[{"name":"struct_unnamed11"}],"output":{"name":"struct_unnamed11"}}],[11,"default","","",25,{"inputs":[{"name":"struct_unnamed11"}],"output":{"name":"struct_unnamed11"}}],[11,"clone","","",26,{"inputs":[{"name":"struct_unnamed12"}],"output":{"name":"struct_unnamed12"}}],[11,"default","","",26,{"inputs":[{"name":"struct_unnamed12"}],"output":{"name":"struct_unnamed12"}}],[11,"clone","","",27,{"inputs":[{"name":"struct_unnamed13"}],"output":{"name":"struct_unnamed13"}}],[11,"default","","",27,{"inputs":[{"name":"struct_unnamed13"}],"output":{"name":"struct_unnamed13"}}],[11,"clone","","",28,{"inputs":[{"name":"struct_unnamed14"}],"output":{"name":"struct_unnamed14"}}],[11,"default","","",28,{"inputs":[{"name":"struct_unnamed14"}],"output":{"name":"struct_unnamed14"}}],[11,"clone","","",29,{"inputs":[{"name":"struct_timespec"}],"output":{"name":"struct_timespec"}}],[11,"default","","",29,{"inputs":[{"name":"struct_timespec"}],"output":{"name":"struct_timespec"}}],[11,"clone","","",30,{"inputs":[{"name":"struct_timeval"}],"output":{"name":"struct_timeval"}}],[11,"default","","",30,{"inputs":[{"name":"struct_timeval"}],"output":{"name":"struct_timeval"}}],[11,"clone","","",31,{"inputs":[{"name":"struct_unnamed15"}],"output":{"name":"struct_unnamed15"}}],[11,"default","","",31,{"inputs":[{"name":"struct_unnamed15"}],"output":{"name":"struct_unnamed15"}}],[11,"clone","","",32,{"inputs":[{"name":"union_pthread_attr_t"}],"output":{"name":"union_pthread_attr_t"}}],[11,"__size","","",32,null],[11,"__align","","",32,null],[11,"default","","",32,{"inputs":[{"name":"union_pthread_attr_t"}],"output":{"name":"union_pthread_attr_t"}}],[11,"clone","","",33,{"inputs":[{"name":"struct___pthread_internal_list"}],"output":{"name":"struct___pthread_internal_list"}}],[11,"default","","",33,{"inputs":[{"name":"struct___pthread_internal_list"}],"output":{"name":"struct___pthread_internal_list"}}],[11,"clone","","",34,{"inputs":[{"name":"union_unnamed16"}],"output":{"name":"union_unnamed16"}}],[11,"__data","","",34,null],[11,"__size","","",34,null],[11,"__align","","",34,null],[11,"default","","",34,{"inputs":[{"name":"union_unnamed16"}],"output":{"name":"union_unnamed16"}}],[11,"clone","","",35,{"inputs":[{"name":"struct___pthread_mutex_s"}],"output":{"name":"struct___pthread_mutex_s"}}],[11,"default","","",35,{"inputs":[{"name":"struct___pthread_mutex_s"}],"output":{"name":"struct___pthread_mutex_s"}}],[11,"clone","","",36,{"inputs":[{"name":"union_unnamed17"}],"output":{"name":"union_unnamed17"}}],[11,"__size","","",36,null],[11,"__align","","",36,null],[11,"default","","",36,{"inputs":[{"name":"union_unnamed17"}],"output":{"name":"union_unnamed17"}}],[11,"clone","","",37,{"inputs":[{"name":"union_unnamed18"}],"output":{"name":"union_unnamed18"}}],[11,"__data","","",37,null],[11,"__size","","",37,null],[11,"__align","","",37,null],[11,"default","","",37,{"inputs":[{"name":"union_unnamed18"}],"output":{"name":"union_unnamed18"}}],[11,"clone","","",38,{"inputs":[{"name":"struct_unnamed19"}],"output":{"name":"struct_unnamed19"}}],[11,"default","","",38,{"inputs":[{"name":"struct_unnamed19"}],"output":{"name":"struct_unnamed19"}}],[11,"clone","","",39,{"inputs":[{"name":"union_unnamed20"}],"output":{"name":"union_unnamed20"}}],[11,"__size","","",39,null],[11,"__align","","",39,null],[11,"default","","",39,{"inputs":[{"name":"union_unnamed20"}],"output":{"name":"union_unnamed20"}}],[11,"clone","","",40,{"inputs":[{"name":"union_unnamed21"}],"output":{"name":"union_unnamed21"}}],[11,"__data","","",40,null],[11,"__size","","",40,null],[11,"__align","","",40,null],[11,"default","","",40,{"inputs":[{"name":"union_unnamed21"}],"output":{"name":"union_unnamed21"}}],[11,"clone","","",41,{"inputs":[{"name":"struct_unnamed22"}],"output":{"name":"struct_unnamed22"}}],[11,"default","","",41,{"inputs":[{"name":"struct_unnamed22"}],"output":{"name":"struct_unnamed22"}}],[11,"clone","","",42,{"inputs":[{"name":"union_unnamed23"}],"output":{"name":"union_unnamed23"}}],[11,"__size","","",42,null],[11,"__align","","",42,null],[11,"default","","",42,{"inputs":[{"name":"union_unnamed23"}],"output":{"name":"union_unnamed23"}}],[11,"clone","","",43,{"inputs":[{"name":"union_unnamed24"}],"output":{"name":"union_unnamed24"}}],[11,"__size","","",43,null],[11,"__align","","",43,null],[11,"default","","",43,{"inputs":[{"name":"union_unnamed24"}],"output":{"name":"union_unnamed24"}}],[11,"clone","","",44,{"inputs":[{"name":"union_unnamed25"}],"output":{"name":"union_unnamed25"}}],[11,"__size","","",44,null],[11,"__align","","",44,null],[11,"default","","",44,{"inputs":[{"name":"union_unnamed25"}],"output":{"name":"union_unnamed25"}}],[11,"clone","","",45,{"inputs":[{"name":"struct_random_data"}],"output":{"name":"struct_random_data"}}],[11,"default","","",45,{"inputs":[{"name":"struct_random_data"}],"output":{"name":"struct_random_data"}}],[11,"clone","","",46,{"inputs":[{"name":"struct_drand48_data"}],"output":{"name":"struct_drand48_data"}}],[11,"default","","",46,{"inputs":[{"name":"struct_drand48_data"}],"output":{"name":"struct_drand48_data"}}],[11,"clone","","",47,{"inputs":[{"name":"struct___locale_struct"}],"output":{"name":"struct___locale_struct"}}],[11,"default","","",47,{"inputs":[{"name":"struct___locale_struct"}],"output":{"name":"struct___locale_struct"}}],[11,"clone","","",48,{"inputs":[{"name":"struct_unnamed26"}],"output":{"name":"struct_unnamed26"}}],[11,"default","","",48,{"inputs":[{"name":"struct_unnamed26"}],"output":{"name":"struct_unnamed26"}}],[11,"clone","","",49,{"inputs":[{"name":"union_unnamed27"}],"output":{"name":"union_unnamed27"}}],[11,"__wch","","",49,null],[11,"__wchb","","",49,null],[11,"default","","",49,{"inputs":[{"name":"union_unnamed27"}],"output":{"name":"union_unnamed27"}}],[11,"clone","","",50,{"inputs":[{"name":"struct_unnamed28"}],"output":{"name":"struct_unnamed28"}}],[11,"default","","",50,{"inputs":[{"name":"struct_unnamed28"}],"output":{"name":"struct_unnamed28"}}],[11,"clone","","",51,{"inputs":[{"name":"struct_unnamed29"}],"output":{"name":"struct_unnamed29"}}],[11,"default","","",51,{"inputs":[{"name":"struct_unnamed29"}],"output":{"name":"struct_unnamed29"}}],[11,"clone","","",52,{"inputs":[{"name":"struct__io_marker"}],"output":{"name":"struct__io_marker"}}],[11,"default","","",52,{"inputs":[{"name":"struct__io_marker"}],"output":{"name":"struct__io_marker"}}],[11,"clone","","",53,{"inputs":[{"name":"struct__io_file"}],"output":{"name":"struct__io_file"}}],[11,"default","","",53,{"inputs":[{"name":"struct__io_file"}],"output":{"name":"struct__io_file"}}],[11,"clone","","",54,{"inputs":[{"name":"struct_unnamed30"}],"output":{"name":"struct_unnamed30"}}],[11,"default","","",54,{"inputs":[{"name":"struct_unnamed30"}],"output":{"name":"struct_unnamed30"}}],[11,"clone","","",55,{"inputs":[{"name":"struct_unnamed31"}],"output":{"name":"struct_unnamed31"}}],[11,"default","","",55,{"inputs":[{"name":"struct_unnamed31"}],"output":{"name":"struct_unnamed31"}}],[11,"clone","","",56,{"inputs":[{"name":"struct_unnamed32"}],"output":{"name":"struct_unnamed32"}}],[11,"default","","",56,{"inputs":[{"name":"struct_unnamed32"}],"output":{"name":"struct_unnamed32"}}],[11,"clone","","",57,{"inputs":[{"name":"struct_unnamed33"}],"output":{"name":"struct_unnamed33"}}],[11,"default","","",57,{"inputs":[{"name":"struct_unnamed33"}],"output":{"name":"struct_unnamed33"}}],[11,"clone","","",58,{"inputs":[{"name":"struct_unnamed34"}],"output":{"name":"struct_unnamed34"}}],[11,"default","","",58,{"inputs":[{"name":"struct_unnamed34"}],"output":{"name":"struct_unnamed34"}}],[11,"clone","","",59,{"inputs":[{"name":"struct_unnamed35"}],"output":{"name":"struct_unnamed35"}}],[11,"default","","",59,{"inputs":[{"name":"struct_unnamed35"}],"output":{"name":"struct_unnamed35"}}],[11,"clone","","",60,{"inputs":[{"name":"struct_unnamed36"}],"output":{"name":"struct_unnamed36"}}],[11,"default","","",60,{"inputs":[{"name":"struct_unnamed36"}],"output":{"name":"struct_unnamed36"}}],[11,"clone","","",61,{"inputs":[{"name":"struct_unnamed37"}],"output":{"name":"struct_unnamed37"}}],[11,"default","","",61,{"inputs":[{"name":"struct_unnamed37"}],"output":{"name":"struct_unnamed37"}}],[11,"clone","","",62,{"inputs":[{"name":"union_unnamed38"}],"output":{"name":"union_unnamed38"}}],[11,"i","","",62,null],[11,"f","","",62,null],[11,"default","","",62,{"inputs":[{"name":"union_unnamed38"}],"output":{"name":"union_unnamed38"}}],[11,"clone","","",63,{"inputs":[{"name":"struct_unnamed39"}],"output":{"name":"struct_unnamed39"}}],[11,"default","","",63,{"inputs":[{"name":"struct_unnamed39"}],"output":{"name":"struct_unnamed39"}}],[11,"clone","","",64,{"inputs":[{"name":"struct_unnamed40"}],"output":{"name":"struct_unnamed40"}}],[11,"default","","",64,{"inputs":[{"name":"struct_unnamed40"}],"output":{"name":"struct_unnamed40"}}],[11,"clone","","",65,{"inputs":[{"name":"struct___va_list_tag"}],"output":{"name":"struct___va_list_tag"}}],[11,"default","","",65,{"inputs":[{"name":"struct___va_list_tag"}],"output":{"name":"struct___va_list_tag"}}],[0,"vcfutils","rust_htslib::htslib","",null,null],[5,"bcf_trim_alleles","rust_htslib::htslib::vcfutils","",null,null],[6,"BGZF","rust_htslib::htslib","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"size_t","","",null,null],[6,"wchar_t","","",null,null],[6,"kstring_t","","",null,null],[6,"Enum_htsFormatCategory","","",null,null],[6,"Enum_htsExactFormat","","",null,null],[6,"Enum_htsCompression","","",null,null],[6,"htsFormat","","",null,null],[6,"htsFile","","",null,null],[6,"Enum_sam_fields","","",null,null],[6,"Enum_cram_option","","",null,null],[6,"hts_idx_t","","",null,null],[6,"hts_pair64_t","","",null,null],[6,"hts_readrec_func","","",null,null],[6,"hts_itr_t","","",null,null],[6,"hts_name2id_f","","",null,null],[6,"hts_id2name_f","","",null,null],[6,"hts_itr_query_func","","",null,null],[6,"bam_hdr_t","","",null,null],[6,"bam1_core_t","","",null,null],[6,"bam1_t","","",null,null],[6,"samFile","","",null,null],[6,"bam_pileup1_t","","",null,null],[6,"bam_plp_auto_f","","",null,null],[6,"bam_plp_t","","",null,null],[6,"bam_mplp_t","","",null,null],[17,"HTS_FMT_BAI","","",null,null],[17,"unknown_category","","",null,null],[17,"sequence_data","","",null,null],[17,"variant_data","","",null,null],[17,"index_file","","",null,null],[17,"region_list","","",null,null],[17,"category_maximum","","",null,null],[17,"unknown_format","","",null,null],[17,"binary_format","","",null,null],[17,"text_format","","",null,null],[17,"sam","","",null,null],[17,"bam","","",null,null],[17,"bai","","",null,null],[17,"cram","","",null,null],[17,"crai","","",null,null],[17,"vcf","","",null,null],[17,"bcf","","",null,null],[17,"csi","","",null,null],[17,"gzi","","",null,null],[17,"tbi","","",null,null],[17,"bed","","",null,null],[17,"format_maximum","","",null,null],[17,"no_compression","","",null,null],[17,"gzip","","",null,null],[17,"bgzf","","",null,null],[17,"custom","","",null,null],[17,"compression_maximum","","",null,null],[17,"SAM_QNAME","","",null,null],[17,"SAM_FLAG","","",null,null],[17,"SAM_RNAME","","",null,null],[17,"SAM_POS","","",null,null],[17,"SAM_MAPQ","","",null,null],[17,"SAM_CIGAR","","",null,null],[17,"SAM_RNEXT","","",null,null],[17,"SAM_PNEXT","","",null,null],[17,"SAM_TLEN","","",null,null],[17,"SAM_SEQ","","",null,null],[17,"SAM_QUAL","","",null,null],[17,"SAM_AUX","","",null,null],[17,"SAM_RGAUX","","",null,null],[17,"CRAM_OPT_DECODE_MD","","",null,null],[17,"CRAM_OPT_PREFIX","","",null,null],[17,"CRAM_OPT_VERBOSITY","","",null,null],[17,"CRAM_OPT_SEQS_PER_SLICE","","",null,null],[17,"CRAM_OPT_SLICES_PER_CONTAINER","","",null,null],[17,"CRAM_OPT_RANGE","","",null,null],[17,"CRAM_OPT_VERSION","","",null,null],[17,"CRAM_OPT_EMBED_REF","","",null,null],[17,"CRAM_OPT_IGNORE_MD5","","",null,null],[17,"CRAM_OPT_REFERENCE","","",null,null],[17,"CRAM_OPT_MULTI_SEQ_PER_SLICE","","",null,null],[17,"CRAM_OPT_NO_REF","","",null,null],[17,"CRAM_OPT_USE_BZIP2","","",null,null],[17,"CRAM_OPT_SHARED_REF","","",null,null],[17,"CRAM_OPT_NTHREADS","","",null,null],[17,"CRAM_OPT_THREAD_POOL","","",null,null],[17,"CRAM_OPT_USE_LZMA","","",null,null],[17,"CRAM_OPT_USE_RANS","","",null,null],[17,"CRAM_OPT_REQUIRED_FIELDS","","",null,null],[0,"bam","rust_htslib","",null,null],[3,"Reader","rust_htslib::bam","A BAM reader.",null,null],[12,"header","","",66,null],[3,"IndexedReader","","",null,null],[12,"header","","",67,null],[3,"Writer","","A BAM writer.",null,null],[12,"header","","",68,null],[3,"Records","","Iterator over the records of a BAM.",null,null],[3,"HeaderView","","",null,null],[4,"ReadError","","",null,null],[13,"Truncated","","",69,null],[13,"Invalid","","",69,null],[13,"NoMoreRecord","","",69,null],[4,"IndexError","","",null,null],[13,"InvalidIndex","","",70,null],[13,"InvalidPath","","",70,null],[4,"BGZFError","","",null,null],[13,"InvalidPath","","",71,null],[0,"record","","",null,null],[3,"Record","rust_htslib::bam::record","A BAM record.",null,null],[12,"inner","","",72,null],[3,"Seq","","",null,null],[12,"encoded","","",73,null],[4,"Aux","","Auxiliary record data.",null,null],[13,"Integer","","",74,null],[13,"String","","",74,null],[13,"Float","","",74,null],[13,"Char","","",74,null],[4,"Cigar","","",null,null],[13,"Match","","",75,null],[13,"Ins","","",75,null],[13,"Del","","",75,null],[13,"RefSkip","","",75,null],[13,"SoftClip","","",75,null],[13,"HardClip","","",75,null],[13,"Pad","","",75,null],[13,"Equal","","",75,null],[13,"Diff","","",75,null],[13,"Back","","",75,null],[11,"new","","Create an empty BAM record.",72,{"inputs":[{"name":"record"}],"output":{"name":"self"}}],[11,"from_inner","","",72,null],[11,"tid","","Get target id.",72,{"inputs":[{"name":"record"}],"output":{"name":"i32"}}],[11,"set_tid","","Set target id.",72,{"inputs":[{"name":"record"},{"name":"i32"}],"output":null}],[11,"pos","","Get position.",72,{"inputs":[{"name":"record"}],"output":{"name":"i32"}}],[11,"set_pos","","Set position.",72,{"inputs":[{"name":"record"},{"name":"i32"}],"output":null}],[11,"bin","","",72,{"inputs":[{"name":"record"}],"output":{"name":"u16"}}],[11,"set_bin","","",72,{"inputs":[{"name":"record"},{"name":"u16"}],"output":null}],[11,"mapq","","Get MAPQ.",72,{"inputs":[{"name":"record"}],"output":{"name":"u8"}}],[11,"set_mapq","","Set MAPQ.",72,{"inputs":[{"name":"record"},{"name":"u8"}],"output":null}],[11,"flags","","Get raw flags.",72,{"inputs":[{"name":"record"}],"output":{"name":"u16"}}],[11,"set_flags","","Set raw flags.",72,{"inputs":[{"name":"record"},{"name":"u16"}],"output":null}],[11,"unset_flags","","Unset all flags.",72,{"inputs":[{"name":"record"}],"output":null}],[11,"mtid","","Get target id of mate.",72,{"inputs":[{"name":"record"}],"output":{"name":"i32"}}],[11,"set_mtid","","Set target id of mate.",72,{"inputs":[{"name":"record"},{"name":"i32"}],"output":null}],[11,"mpos","","Get mate position.",72,{"inputs":[{"name":"record"}],"output":{"name":"i32"}}],[11,"set_mpos","","Set mate position.",72,{"inputs":[{"name":"record"},{"name":"i32"}],"output":null}],[11,"insert_size","","Get insert size.",72,{"inputs":[{"name":"record"}],"output":{"name":"i32"}}],[11,"set_insert_size","","Set insert size.",72,{"inputs":[{"name":"record"},{"name":"i32"}],"output":null}],[11,"qname","","Get qname (read name).",72,null],[11,"set","","Set variable length data (qname, cigar, seq, qual).",72,null],[11,"cigar","","Get cigar sequence.",72,{"inputs":[{"name":"record"}],"output":{"name":"vec"}}],[11,"seq","","Get read sequence.",72,{"inputs":[{"name":"record"}],"output":{"name":"seq"}}],[11,"qual","","Get base qualities.",72,null],[11,"aux","","Get auxiliary data (tags).",72,null],[11,"push_aux","","Add auxiliary data.",72,null],[11,"is_paired","","",72,{"inputs":[{"name":"record"}],"output":{"name":"bool"}}],[11,"set_paired","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"is_proper_pair","","",72,{"inputs":[{"name":"record"}],"output":{"name":"bool"}}],[11,"set_proper_pair","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"is_unmapped","","",72,{"inputs":[{"name":"record"}],"output":{"name":"bool"}}],[11,"set_unmapped","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"is_mate_unmapped","","",72,{"inputs":[{"name":"record"}],"output":{"name":"bool"}}],[11,"set_mate_unmapped","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"is_reverse","","",72,{"inputs":[{"name":"record"}],"output":{"name":"bool"}}],[11,"set_reverse","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"is_mate_reverse","","",72,{"inputs":[{"name":"record"}],"output":{"name":"bool"}}],[11,"set_mate_reverse","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"is_first_in_pair","","",72,{"inputs":[{"name":"record"}],"output":{"name":"bool"}}],[11,"set_first_in_pair","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"is_second_in_pair","","",72,{"inputs":[{"name":"record"}],"output":{"name":"bool"}}],[11,"set_second_in_pair","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"is_secondary","","",72,{"inputs":[{"name":"record"}],"output":{"name":"bool"}}],[11,"set_secondary","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"is_quality_check_failed","","",72,{"inputs":[{"name":"record"}],"output":{"name":"bool"}}],[11,"set_quality_check_failed","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"is_duplicate","","",72,{"inputs":[{"name":"record"}],"output":{"name":"bool"}}],[11,"set_duplicate","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"is_supplementary","","",72,{"inputs":[{"name":"record"}],"output":{"name":"bool"}}],[11,"set_supplementary","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"drop","","",72,{"inputs":[{"name":"record"}],"output":null}],[11,"fmt","","",74,{"inputs":[{"name":"aux"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"aux"},{"name":"aux"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"aux"},{"name":"aux"}],"output":{"name":"bool"}}],[11,"string","","Get string from aux data (panics if not a string).",74,null],[11,"float","","",74,{"inputs":[{"name":"aux"}],"output":{"name":"f64"}}],[11,"integer","","",74,{"inputs":[{"name":"aux"}],"output":{"name":"i32"}}],[11,"char","","",74,{"inputs":[{"name":"aux"}],"output":{"name":"u8"}}],[11,"encoded_base","","",73,{"inputs":[{"name":"seq"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"as_bytes","","",73,{"inputs":[{"name":"seq"}],"output":{"name":"vec"}}],[11,"len","","",73,{"inputs":[{"name":"seq"}],"output":{"name":"usize"}}],[11,"index","","",73,{"inputs":[{"name":"seq"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"fmt","","",75,{"inputs":[{"name":"cigar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"cigar"},{"name":"cigar"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"cigar"},{"name":"cigar"}],"output":{"name":"bool"}}],[0,"header","rust_htslib::bam","",null,null],[3,"Header","rust_htslib::bam::header","A BAM header.",null,null],[3,"HeaderRecord","","Header record.",null,null],[11,"new","","Create a new header.",76,{"inputs":[{"name":"header"}],"output":{"name":"self"}}],[11,"push_record","","Add a record to the header.",76,{"inputs":[{"name":"header"},{"name":"headerrecord"}],"output":{"name":"self"}}],[11,"push_comment","","Add a comment to the header.",76,null],[11,"to_bytes","","",76,{"inputs":[{"name":"header"}],"output":{"name":"vec"}}],[11,"new","","Create a new header record.\nSee SAM format specification for possible record types.",77,null],[11,"push_tag","","Add a new tag to the record.",77,null],[0,"pileup","rust_htslib::bam","",null,null],[3,"Pileup","rust_htslib::bam::pileup","A pileup over one genomic position.",null,null],[3,"Alignment","","An aligned read in a pileup.",null,null],[3,"Pileups","","Iterator over pileups.",null,null],[4,"Indel","","",null,null],[13,"Ins","","",78,null],[13,"Del","","",78,null],[13,"None","","",78,null],[6,"Alignments","","Iterator over alignments of a pileup.",null,null],[11,"tid","","",79,{"inputs":[{"name":"pileup"}],"output":{"name":"u32"}}],[11,"pos","","",79,{"inputs":[{"name":"pileup"}],"output":{"name":"u32"}}],[11,"depth","","",79,{"inputs":[{"name":"pileup"}],"output":{"name":"u32"}}],[11,"alignments","","",79,{"inputs":[{"name":"pileup"}],"output":{"name":"alignments"}}],[11,"new","","",80,{"inputs":[{"name":"alignment"},{"name":"bam_pileup1_t"}],"output":{"name":"self"}}],[11,"qpos","","Position within the read.",80,{"inputs":[{"name":"alignment"}],"output":{"name":"usize"}}],[11,"indel","","Insertion, deletion (with length) or None if no indel.",80,{"inputs":[{"name":"alignment"}],"output":{"name":"indel"}}],[11,"record","","The corresponding record.",80,{"inputs":[{"name":"alignment"}],"output":{"name":"record"}}],[11,"eq","","",78,{"inputs":[{"name":"indel"},{"name":"indel"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"indel"},{"name":"indel"}],"output":{"name":"bool"}}],[11,"fmt","","",78,{"inputs":[{"name":"indel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",81,{"inputs":[{"name":"pileups"},{"name":"bam_plp_t"}],"output":{"name":"self"}}],[11,"set_max_depth","","",81,{"inputs":[{"name":"pileups"},{"name":"u32"}],"output":null}],[11,"next","","",81,{"inputs":[{"name":"pileups"}],"output":{"name":"option"}}],[11,"drop","","",81,{"inputs":[{"name":"pileups"}],"output":null}],[8,"Read","rust_htslib::bam","A trait for a BAM reader with a read method.",null,null],[10,"read","","Read next BAM record into given record.\nUse this method in combination with a single allocated record to avoid the reallocations\noccurring with the iterator.",82,{"inputs":[{"name":"read"},{"name":"record"}],"output":{"name":"result"}}],[10,"records","","Iterator over the records of the seeked region.\nNote that, while being convenient, this is less efficient than pre-allocating a\n`Record` and reading into it with the `read` method, since every iteration involves\nthe allocation of a new `Record`.",82,{"inputs":[{"name":"read"}],"output":{"name":"records"}}],[10,"pileup","","Iterator over pileups.",82,{"inputs":[{"name":"read"}],"output":{"name":"pileups"}}],[10,"bgzf","","Return the BGZF struct",82,null],[11,"new","","Create a new Reader.",66,{"inputs":[{"name":"reader"},{"name":"p"}],"output":{"name":"result"}}],[11,"read","","",66,{"inputs":[{"name":"reader"},{"name":"record"}],"output":{"name":"result"}}],[11,"records","","Iterator over the records of the seeked region.\nNote that, while being convenient, this is less efficient than pre-allocating a\n`Record` and reading into it with the `read` method, since every iteration involves\nthe allocation of a new `Record`.",66,{"inputs":[{"name":"reader"}],"output":{"name":"records"}}],[11,"pileup","","",66,{"inputs":[{"name":"reader"}],"output":{"name":"pileups"}}],[11,"bgzf","","",66,null],[11,"drop","","",66,{"inputs":[{"name":"reader"}],"output":null}],[11,"new","","Create a new Reader.",67,{"inputs":[{"name":"indexedreader"},{"name":"p"}],"output":{"name":"result"}}],[11,"seek","","",67,{"inputs":[{"name":"indexedreader"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"read","","",67,{"inputs":[{"name":"indexedreader"},{"name":"record"}],"output":{"name":"result"}}],[11,"records","","Iterator over the records of the seeked region.\nNote that, while being convenient, this is less efficient than pre-allocating a\n`Record` and reading into it with the `read` method, since every iteration involves\nthe allocation of a new `Record`.",67,{"inputs":[{"name":"indexedreader"}],"output":{"name":"records"}}],[11,"pileup","","",67,{"inputs":[{"name":"indexedreader"}],"output":{"name":"pileups"}}],[11,"bgzf","","",67,null],[11,"drop","","",67,{"inputs":[{"name":"indexedreader"}],"output":null}],[11,"new","","Create a new BAM file.",68,{"inputs":[{"name":"writer"},{"name":"p"},{"name":"header"}],"output":{"name":"result"}}],[11,"with_template","","Create a new BAM file from template.",68,{"inputs":[{"name":"writer"},{"name":"t"},{"name":"p"}],"output":{"name":"result"}}],[11,"write","","Write record to BAM.",68,{"inputs":[{"name":"writer"},{"name":"record"}],"output":{"name":"result"}}],[11,"drop","","",68,{"inputs":[{"name":"writer"}],"output":null}],[11,"next","","",83,{"inputs":[{"name":"records"}],"output":{"name":"option"}}],[11,"tid","","",84,null],[11,"target_count","","",84,{"inputs":[{"name":"headerview"}],"output":{"name":"u32"}}],[11,"target_names","","",84,{"inputs":[{"name":"headerview"}],"output":{"name":"vec"}}],[11,"target_len","","",84,{"inputs":[{"name":"headerview"},{"name":"u32"}],"output":{"name":"option"}}],[0,"bcf","rust_htslib","",null,null],[3,"Reader","rust_htslib::bcf","",null,null],[12,"header","","",85,null],[3,"Writer","","",null,null],[12,"header","","",86,null],[3,"Records","","",null,null],[4,"BCFError","","",null,null],[13,"InvalidPath","","",87,null],[4,"ReadError","","",null,null],[13,"Invalid","","",88,null],[13,"NoMoreRecord","","",88,null],[0,"record","","",null,null],[3,"Record","rust_htslib::bcf::record","",null,null],[12,"inner","","",89,null],[12,"header","","",89,null],[3,"Info","","",null,null],[3,"Format","","",null,null],[4,"TagError","","",null,null],[13,"UndefinedTag","","",90,null],[13,"UnexpectedType","","",90,null],[13,"MissingTag","","",90,null],[17,"MISSING_INTEGER","","",null,null],[17,"MISSING_FLOAT","","",null,null],[17,"VECTOR_END_INTEGER","","",null,null],[17,"VECTOR_END_FLOAT","","",null,null],[11,"new","","",89,{"inputs":[{"name":"record"}],"output":{"name":"self"}}],[11,"rid","","",89,{"inputs":[{"name":"record"}],"output":{"name":"option"}}],[11,"pos","","",89,{"inputs":[{"name":"record"}],"output":{"name":"u32"}}],[11,"set_pos","","",89,{"inputs":[{"name":"record"},{"name":"i32"}],"output":null}],[11,"alleles","","",89,{"inputs":[{"name":"record"}],"output":{"name":"vec"}}],[11,"qual","","",89,{"inputs":[{"name":"record"}],"output":{"name":"f32"}}],[11,"set_qual","","",89,{"inputs":[{"name":"record"},{"name":"f32"}],"output":null}],[11,"info","","Get the value of the given info tag.",89,null],[11,"sample_count","","",89,{"inputs":[{"name":"record"}],"output":{"name":"u32"}}],[11,"allele_count","","",89,{"inputs":[{"name":"record"}],"output":{"name":"u16"}}],[11,"format","","Get the value of the given format tag for each sample.",89,null],[11,"push_format_integer","","Add an integer format tag. Data is a flattened two-dimensional array.\nThe first dimension contains one array for each sample.\nReturns error if tag is not present in header.",89,null],[11,"push_format_float","","Add a float format tag. Data is a flattened two-dimensional array.\nThe first dimension contains one array for each sample.\nReturns error if tag is not present in header.",89,null],[11,"push_info","","Add a info tag.",89,null],[11,"trim_alleles","","Remove unused alleles.",89,{"inputs":[{"name":"record"}],"output":{"name":"result"}}],[11,"drop","","",89,{"inputs":[{"name":"record"}],"output":null}],[11,"integer","","",91,{"inputs":[{"name":"info"}],"output":{"name":"result"}}],[11,"integer_mut","","",91,{"inputs":[{"name":"info"}],"output":{"name":"result"}}],[11,"float","","",91,{"inputs":[{"name":"info"}],"output":{"name":"result"}}],[11,"float_mut","","",91,{"inputs":[{"name":"info"}],"output":{"name":"result"}}],[11,"flag","","",91,{"inputs":[{"name":"info"}],"output":{"name":"result"}}],[11,"string","","",91,{"inputs":[{"name":"info"}],"output":{"name":"result"}}],[11,"string_mut","","",91,{"inputs":[{"name":"info"}],"output":{"name":"result"}}],[11,"integer","","",92,{"inputs":[{"name":"format"}],"output":{"name":"result"}}],[11,"integer_mut","","",92,{"inputs":[{"name":"format"}],"output":{"name":"result"}}],[11,"float","","",92,{"inputs":[{"name":"format"}],"output":{"name":"result"}}],[11,"float_mut","","",92,{"inputs":[{"name":"format"}],"output":{"name":"result"}}],[11,"string","","",92,{"inputs":[{"name":"format"}],"output":{"name":"result"}}],[11,"string_mut","","",92,{"inputs":[{"name":"format"}],"output":{"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"tagerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"header","rust_htslib::bcf","",null,null],[3,"Header","rust_htslib::bcf::header","A BCF header.",null,null],[12,"inner","","",93,null],[12,"subset","","",93,null],[3,"HeaderView","","",null,null],[12,"inner","","",94,null],[6,"SampleSubset","","",null,null],[11,"new","","Create a new header.",93,{"inputs":[{"name":"header"}],"output":{"name":"self"}}],[11,"with_template","","",93,{"inputs":[{"name":"header"},{"name":"headerview"}],"output":{"name":"self"}}],[11,"subset_template","","",93,null],[11,"push_sample","","",93,null],[11,"push_record","","Add a record to the header.",93,null],[11,"remove_info","","",93,null],[11,"remove_format","","",93,null],[11,"drop","","",93,{"inputs":[{"name":"header"}],"output":null}],[11,"new","","",94,null],[11,"sample_count","","",94,{"inputs":[{"name":"headerview"}],"output":{"name":"u32"}}],[11,"samples","","",94,{"inputs":[{"name":"headerview"}],"output":{"name":"vec"}}],[11,"rid2name","","",94,null],[11,"new","rust_htslib::bcf","",85,{"inputs":[{"name":"reader"},{"name":"p"}],"output":{"name":"result"}}],[11,"read","","",85,{"inputs":[{"name":"reader"},{"name":"record"}],"output":{"name":"result"}}],[11,"records","","",85,{"inputs":[{"name":"reader"}],"output":{"name":"records"}}],[11,"drop","","",85,{"inputs":[{"name":"reader"}],"output":null}],[11,"new","","",86,{"inputs":[{"name":"writer"},{"name":"p"},{"name":"header"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"translate","","Translate record to header of this writer.",86,{"inputs":[{"name":"writer"},{"name":"record"}],"output":null}],[11,"subset","","Subset samples of record to match header of this writer.",86,{"inputs":[{"name":"writer"},{"name":"record"}],"output":null}],[11,"write","","",86,{"inputs":[{"name":"writer"},{"name":"record"}],"output":{"name":"result"}}],[11,"drop","","",86,{"inputs":[{"name":"writer"}],"output":null}],[11,"next","","",95,{"inputs":[{"name":"records"}],"output":{"name":"option"}}],[0,"utils","rust_htslib","",null,null],[5,"copy_memory","rust_htslib::utils","Copies data from `src` to `dst`\nTODO remove once stable in standard library.",null,null],[5,"path_to_cstring","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}]],"paths":[[3,"Struct___kstring_t"],[3,"Struct_htsFormat"],[3,"Struct_Unnamed1"],[3,"Struct_Unnamed2"],[3,"Union_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Struct_Unnamed5"],[3,"Struct_Unnamed6"],[3,"Struct_Unnamed7"],[3,"Struct_Unnamed8"],[3,"Struct_Unnamed9"],[3,"Struct_Unnamed10"],[3,"Struct___kstring_t"],[3,"Struct_htsFormat"],[3,"Struct_Unnamed1"],[3,"Struct_Unnamed2"],[3,"Union_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Struct_Unnamed5"],[3,"Struct_Unnamed6"],[3,"Struct_Unnamed7"],[3,"Union_wait"],[3,"Struct_Unnamed8"],[3,"Struct_Unnamed9"],[3,"Union_Unnamed10"],[3,"Struct_Unnamed11"],[3,"Struct_Unnamed12"],[3,"Struct_Unnamed13"],[3,"Struct_Unnamed14"],[3,"Struct_timespec"],[3,"Struct_timeval"],[3,"Struct_Unnamed15"],[3,"Union_pthread_attr_t"],[3,"Struct___pthread_internal_list"],[3,"Union_Unnamed16"],[3,"Struct___pthread_mutex_s"],[3,"Union_Unnamed17"],[3,"Union_Unnamed18"],[3,"Struct_Unnamed19"],[3,"Union_Unnamed20"],[3,"Union_Unnamed21"],[3,"Struct_Unnamed22"],[3,"Union_Unnamed23"],[3,"Union_Unnamed24"],[3,"Union_Unnamed25"],[3,"Struct_random_data"],[3,"Struct_drand48_data"],[3,"Struct___locale_struct"],[3,"Struct_Unnamed26"],[3,"Union_Unnamed27"],[3,"Struct_Unnamed28"],[3,"Struct_Unnamed29"],[3,"Struct__IO_marker"],[3,"Struct__IO_FILE"],[3,"Struct_Unnamed30"],[3,"Struct_Unnamed31"],[3,"Struct_Unnamed32"],[3,"Struct_Unnamed33"],[3,"Struct_Unnamed34"],[3,"Struct_Unnamed35"],[3,"Struct_Unnamed36"],[3,"Struct_Unnamed37"],[3,"Union_Unnamed38"],[3,"Struct_Unnamed39"],[3,"Struct_Unnamed40"],[3,"Struct___va_list_tag"],[3,"Reader"],[3,"IndexedReader"],[3,"Writer"],[4,"ReadError"],[4,"IndexError"],[4,"BGZFError"],[3,"Record"],[3,"Seq"],[4,"Aux"],[4,"Cigar"],[3,"Header"],[3,"HeaderRecord"],[4,"Indel"],[3,"Pileup"],[3,"Alignment"],[3,"Pileups"],[8,"Read"],[3,"Records"],[3,"HeaderView"],[3,"Reader"],[3,"Writer"],[4,"BCFError"],[4,"ReadError"],[3,"Record"],[4,"TagError"],[3,"Info"],[3,"Format"],[3,"Header"],[3,"HeaderView"],[3,"Records"]]};
searchIndex['itertools'] = {"items":[[0,"","itertools","Itertools — extra iterator adaptors, functions and macros.",null,null],[3,"Dedup","","An iterator adaptor that removes repeated duplicates.",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two iterators until both\nrun out.",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two iterators until\none of them runs out.",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators `I` and `J`.",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single\nitem to the front of the iterator.",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple\nitems in front of the iterator.",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator\nand may pick off as many elements as it likes, to produce the next iterator element.",null,null],[3,"GroupBy","","An iterator adaptor that groups iterator elements. Consecutive elements\nthat map to the same key (“runs”), are returned as the iterator elements.",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the base iterator\nfor each iteration.",null,null],[3,"Merge","","An iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MultiPeek","","An iterator adaptor that allows the user to peek at multiple *.next()*\nvalues without advancing itself.",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able iterator\nto only pick off elements while the predicate returns `true`.",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator elements\nand produces `A`. Stops on the first `None` encountered.",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent elements.",null,null],[3,"MendSlices","","An iterator adaptor that glues together adjacent contiguous slices.",null,null],[3,"Combinations","","An iterator to iterate through all the combinations of pairs in a `Clone`-able iterator.",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"ChunksLazy","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupByLazy","","`GroupByLazy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.",null,null],[3,"ISlice","","An iterator adaptor that yields a subset (a slice) of the base iterator.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum length by filling\nmissing elements using a closure.",null,null],[3,"RepeatN","","An iterator that repeats an element exactly *n* times.",null,null],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.",null,null],[12,"rciter","","The boxed iterator.",0,null],[3,"Stride","","An iterator similar to the slice iterator, but with a certain number of steps\n(the stride) skipped per iteration.",null,null],[3,"StrideMut","","The mutable equivalent of Stride.",null,null],[3,"Tee","","One half of an iterator pair where both return the same elements.",null,null],[3,"Linspace","","An iterator of a sequence of evenly spaced floats.",null,null],[3,"RepeatCall","","An iterator source that produces elements indefinitely by calling\na given closure.",null,null],[3,"Unfold","","`Unfold` is a general iterator builder: it has a mutable state value,\nand a closure with access to the state that produces the next value.",null,null],[12,"state","","Internal state that will be passed to the closure on the next iteration",1,null],[3,"ZipLongest","","An iterator which iterates two other iterators simultaneously",null,null],[3,"Zip","","An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.",null,null],[3,"ZipSlices","","An iterator which iterates two slices simultaneously.",null,null],[4,"EitherOrBoth","","A value yielded by `ZipLongest`.\nContains one or two values, depending on which of the input iterators are exhausted.",null,null],[13,"Both","","Neither input iterator is exhausted yet, yielding two values.",2,null],[13,"Left","","The parameter iterator of `.zip_longest()` is exhausted,\nonly yielding a value from the `self` iterator.",2,null],[13,"Right","","The `self` iterator of `.zip_longest()` is exhausted,\nonly yielding a value from the parameter iterator.",2,null],[5,"linspace","","Return an iterator of evenly spaced floats.",null,{"inputs":[{"name":"f"},{"name":"f"},{"name":"usize"}],"output":{"name":"linspace"}}],[5,"equal","","Return `true` if both iterators produce equal sequences\n(elements pairwise equal and sequences of the same length),\n`false` otherwise.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"bool"}}],[5,"assert_equal","","Assert that two iterators produce equal sequences, with the same\nsemantics as *equal(a, b)*.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":null}],[5,"partition","","Partition a sequence using predicate `pred` so that elements\nthat map to `true` are placed before elements which map to `false`.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"usize"}}],[5,"enumerate","","Iterate `iterable` with a running index.",null,{"inputs":[{"name":"i"}],"output":{"name":"enumerate"}}],[5,"rev","","Iterate `iterable` in reverse.",null,{"inputs":[{"name":"i"}],"output":{"name":"rev"}}],[11,"clone","","",3,{"inputs":[{"name":"interleave"}],"output":{"name":"interleave"}}],[11,"new","","Creat a new `Interleave` iterator.",3,{"inputs":[{"name":"interleave"},{"name":"i"},{"name":"j"}],"output":{"name":"interleave"}}],[11,"next","","",3,{"inputs":[{"name":"interleave"}],"output":{"name":"option"}}],[11,"clone","","",4,{"inputs":[{"name":"interleaveshortest"}],"output":{"name":"interleaveshortest"}}],[11,"new","","Create a new `InterleaveShortest` iterator.",4,{"inputs":[{"name":"interleaveshortest"},{"name":"i"},{"name":"j"}],"output":{"name":"interleaveshortest"}}],[11,"next","","",4,{"inputs":[{"name":"interleaveshortest"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"clone","","",5,{"inputs":[{"name":"putback"}],"output":{"name":"putback"}}],[11,"new","","Iterator element type is `A`",5,{"inputs":[{"name":"putback"},{"name":"i"}],"output":{"name":"self"}}],[11,"put_back","","Put back a single value to the front of the iterator.",5,{"inputs":[{"name":"putback"},{"name":"item"}],"output":null}],[11,"next","","",5,{"inputs":[{"name":"putback"}],"output":{"name":"option"}}],[11,"size_hint","","",5,null],[11,"new","","Iterator element type is `A`",6,{"inputs":[{"name":"putbackn"},{"name":"i"}],"output":{"name":"self"}}],[11,"put_back","","Puts x in front of the iterator.\nThe values are yielded in order.",6,{"inputs":[{"name":"putbackn"},{"name":"item"}],"output":null}],[11,"next","","",6,{"inputs":[{"name":"putbackn"}],"output":{"name":"option"}}],[11,"size_hint","","",6,null],[11,"clone","","",6,{"inputs":[{"name":"putbackn"}],"output":{"name":"self"}}],[11,"clone","","",7,{"inputs":[{"name":"product"}],"output":{"name":"product"}}],[11,"new","","Create a new cartesian product iterator",7,{"inputs":[{"name":"product"},{"name":"i"},{"name":"j"}],"output":{"name":"self"}}],[11,"next","","",7,{"inputs":[{"name":"product"}],"output":{"name":"option"}}],[11,"size_hint","","",7,null],[11,"clone","","",8,{"inputs":[{"name":"batching"}],"output":{"name":"batching"}}],[11,"new","","Create a new Batching iterator.",8,{"inputs":[{"name":"batching"},{"name":"i"},{"name":"f"}],"output":{"name":"batching"}}],[11,"next","","",8,{"inputs":[{"name":"batching"}],"output":{"name":"option"}}],[11,"size_hint","","",8,null],[11,"clone","","",9,{"inputs":[{"name":"groupby"}],"output":{"name":"groupby"}}],[11,"new","","Create a new `GroupBy` iterator.",9,{"inputs":[{"name":"groupby"},{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",9,{"inputs":[{"name":"groupby"}],"output":{"name":"option"}}],[11,"size_hint","","",9,null],[11,"clone","","",10,{"inputs":[{"name":"step"}],"output":{"name":"step"}}],[11,"new","","Create a `Step` iterator.",10,{"inputs":[{"name":"step"},{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"next","","",10,{"inputs":[{"name":"step"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"clone","","",11,{"inputs":[{"name":"merge"}],"output":{"name":"self"}}],[11,"next","","",11,{"inputs":[{"name":"merge"}],"output":{"name":"option"}}],[11,"size_hint","","",11,null],[11,"clone","","",12,{"inputs":[{"name":"mergeby"}],"output":{"name":"self"}}],[11,"next","","",12,{"inputs":[{"name":"mergeby"}],"output":{"name":"option"}}],[11,"size_hint","","",12,null],[11,"clone","","",13,{"inputs":[{"name":"multipeek"}],"output":{"name":"multipeek"}}],[11,"new","","Create a `MultiPeek` iterator.",13,{"inputs":[{"name":"multipeek"},{"name":"i"}],"output":{"name":"multipeek"}}],[11,"peek","","Works exactly like *.next()* with the only difference that it doesn't\nadvance itself. *.peek()* can be called multiple times, to peek\nfurther ahead.",13,{"inputs":[{"name":"multipeek"}],"output":{"name":"option"}}],[11,"next","","",13,{"inputs":[{"name":"multipeek"}],"output":{"name":"option"}}],[11,"size_hint","","",13,null],[11,"clone","","",14,{"inputs":[{"name":"coalesce"}],"output":{"name":"self"}}],[11,"new","","Create a new `Coalesce`.",14,{"inputs":[{"name":"coalesce"},{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",14,{"inputs":[{"name":"coalesce"}],"output":{"name":"option"}}],[11,"size_hint","","",14,null],[11,"clone","","",15,{"inputs":[{"name":"dedup"}],"output":{"name":"self"}}],[11,"new","","Create a new `Dedup`.",15,{"inputs":[{"name":"dedup"},{"name":"i"}],"output":{"name":"self"}}],[11,"next","","",15,{"inputs":[{"name":"dedup"}],"output":{"name":"option"}}],[11,"size_hint","","",15,null],[11,"clone","","",16,{"inputs":[{"name":"mendslices"}],"output":{"name":"self"}}],[11,"new","","Create a new `MendSlices`.",16,{"inputs":[{"name":"mendslices"},{"name":"i"}],"output":{"name":"self"}}],[11,"next","","",16,{"inputs":[{"name":"mendslices"}],"output":{"name":"option"}}],[11,"size_hint","","",16,null],[11,"new","","Create a new `TakeWhileRef` from a reference to clonable iterator.",17,{"inputs":[{"name":"takewhileref"},{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",17,{"inputs":[{"name":"takewhileref"}],"output":{"name":"option"}}],[11,"size_hint","","",17,null],[11,"clone","","",18,{"inputs":[{"name":"whilesome"}],"output":{"name":"whilesome"}}],[11,"new","","Create a new `WhileSome<I>`.",18,{"inputs":[{"name":"whilesome"},{"name":"i"}],"output":{"name":"self"}}],[11,"next","","",18,{"inputs":[{"name":"whilesome"}],"output":{"name":"option"}}],[11,"size_hint","","",18,null],[11,"clone","","",19,{"inputs":[{"name":"combinations"}],"output":{"name":"combinations"}}],[11,"new","","Create a new `Combinations` from a clonable iterator.",19,{"inputs":[{"name":"combinations"},{"name":"i"}],"output":{"name":"combinations"}}],[11,"next","","",19,{"inputs":[{"name":"combinations"}],"output":{"name":"option"}}],[11,"size_hint","","",19,null],[11,"clone","","",20,{"inputs":[{"name":"uniqueby"}],"output":{"name":"uniqueby"}}],[11,"new","","Create a new `UniqueBy` iterator.",20,{"inputs":[{"name":"uniqueby"},{"name":"i"},{"name":"f"}],"output":{"name":"uniqueby"}}],[11,"next","","",20,{"inputs":[{"name":"uniqueby"}],"output":{"name":"option"}}],[11,"size_hint","","",20,null],[11,"next","","",21,{"inputs":[{"name":"unique"}],"output":{"name":"option"}}],[11,"size_hint","","",21,null],[11,"clone","","",21,{"inputs":[{"name":"unique"}],"output":{"name":"unique"}}],[11,"fmt","","",22,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",23,{"inputs":[{"name":"groups"}],"output":{"name":"option"}}],[11,"drop","","",24,{"inputs":[{"name":"group"}],"output":null}],[11,"next","","",24,{"inputs":[{"name":"group"}],"output":{"name":"option"}}],[11,"next","","",25,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"drop","","",26,{"inputs":[{"name":"chunk"}],"output":null}],[11,"next","","",26,{"inputs":[{"name":"chunk"}],"output":{"name":"option"}}],[11,"clone","","",27,{"inputs":[{"name":"intersperse"}],"output":{"name":"intersperse"}}],[11,"new","","Create a new Intersperse iterator",27,{"inputs":[{"name":"intersperse"},{"name":"i"},{"name":"item"}],"output":{"name":"self"}}],[11,"next","","",27,{"inputs":[{"name":"intersperse"}],"output":{"name":"option"}}],[11,"size_hint","","",27,null],[11,"clone","","",28,{"inputs":[{"name":"islice"}],"output":{"name":"islice"}}],[11,"new","","Create a new **ISlice**.",28,{"inputs":[{"name":"islice"},{"name":"i"},{"name":"r"}],"output":{"name":"self"}}],[11,"next","","",28,{"inputs":[{"name":"islice"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next","","",29,{"inputs":[{"name":"linspace"}],"output":{"name":"option"}}],[11,"size_hint","","",29,null],[11,"next_back","","",29,{"inputs":[{"name":"linspace"}],"output":{"name":"option"}}],[0,"misc","","A module of helper traits and iterators that are not intended to be used\ndirectly.",null,null],[3,"FlatTuples","itertools::misc","A helper iterator that maps an iterator of tuples like\n`((A, B), C)` to an iterator of `(A, B, C)`.",null,null],[8,"IntoIteratorTuple","","Apply `IntoIterator` on each element of a tuple.",null,null],[16,"Output","","Tuple of values that implement `Iterator`.",30,null],[10,"into_iterator_tuple","","Return a tuple of iterators.",30,{"inputs":[{"name":"intoiteratortuple"}],"output":{"name":"output"}}],[8,"AppendTuple","","A helper trait for (x, y, z) ++ w => (x, y, z, w),\nused for implementing `iproduct!`.",null,null],[16,"Result","","Resulting tuple type",31,null],[10,"append","","“Append” value `x` to a tuple.",31,{"inputs":[{"name":"appendtuple"},{"name":"x"}],"output":{"name":"result"}}],[8,"GenericRange","","`GenericRange` is implemented by Rust's built-in range types, produced\nby range syntax like `a..`, `..b` or `c..d`.",null,null],[8,"ToFloat","","Helper trait to convert usize to floating point type.",null,null],[8,"MendSlice","","A trait for items that can *maybe* be joined together.",null,null],[8,"Slice","","A helper trait to let `ZipSlices` accept both `&[T]` and `&mut [T]`.",null,null],[16,"Item","","The type of a reference to the slice's elements",32,null],[11,"clone","","",33,{"inputs":[{"name":"flattuples"}],"output":{"name":"flattuples"}}],[11,"next","","",33,{"inputs":[{"name":"flattuples"}],"output":{"name":"option"}}],[11,"size_hint","","",33,null],[11,"next_back","","",33,{"inputs":[{"name":"flattuples"}],"output":{"name":"option"}}],[11,"start","core::ops","",34,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"end","","",35,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"start","","",36,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"end","","",36,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","itertools","",37,{"inputs":[{"name":"padusing"}],"output":{"name":"padusing"}}],[11,"new","","Create a new **PadUsing** iterator.",37,{"inputs":[{"name":"padusing"},{"name":"i"},{"name":"usize"},{"name":"f"}],"output":{"name":"padusing"}}],[11,"next","","",37,{"inputs":[{"name":"padusing"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[11,"next_back","","",37,{"inputs":[{"name":"padusing"}],"output":{"name":"option"}}],[11,"new","","Create a new RcIter.",0,{"inputs":[{"name":"rciter"},{"name":"i"}],"output":{"name":"rciter"}}],[11,"clone","","",0,{"inputs":[{"name":"rciter"}],"output":{"name":"rciter"}}],[11,"next","","",0,{"inputs":[{"name":"rciter"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"next_back","","",0,{"inputs":[{"name":"rciter"}],"output":{"name":"option"}}],[11,"new","","Create a new **RepeatN** with **n** repetitions.",38,{"inputs":[{"name":"repeatn"},{"name":"a"},{"name":"usize"}],"output":{"name":"self"}}],[11,"next","","",38,{"inputs":[{"name":"repeatn"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"next_back","","",38,{"inputs":[{"name":"repeatn"}],"output":{"name":"option"}}],[11,"new","","Create a new `RepeatCall` from a closure.",39,{"inputs":[{"name":"repeatcall"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",39,{"inputs":[{"name":"repeatcall"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[11,"next_back","","",39,{"inputs":[{"name":"repeatcall"}],"output":{"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"unfold"}],"output":{"name":"unfold"}}],[11,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",1,{"inputs":[{"name":"unfold"},{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[11,"next","","",1,{"inputs":[{"name":"unfold"}],"output":{"name":"option"}}],[11,"size_hint","","",1,null],[0,"size_hint","","Arithmetic on **Iterator** *.size_hint()* values.",null,null],[5,"add","itertools::size_hint","Add **SizeHint** correctly.",null,{"inputs":[{"name":"sizehint"},{"name":"sizehint"}],"output":{"name":"sizehint"}}],[5,"add_scalar","","Add **x** correctly to a **SizeHint**.",null,{"inputs":[{"name":"sizehint"},{"name":"usize"}],"output":{"name":"sizehint"}}],[5,"sub_scalar","","Sbb **x** correctly to a **SizeHint**.",null,{"inputs":[{"name":"sizehint"},{"name":"usize"}],"output":{"name":"sizehint"}}],[5,"mul_scalar","","Multiply **x** correctly with a **SizeHint**.",null,{"inputs":[{"name":"sizehint"},{"name":"usize"}],"output":{"name":"sizehint"}}],[5,"mul","","Multiply **SizeHint** correctly",null,{"inputs":[{"name":"sizehint"},{"name":"sizehint"}],"output":{"name":"sizehint"}}],[5,"max","","Return the maximum",null,{"inputs":[{"name":"sizehint"},{"name":"sizehint"}],"output":{"name":"sizehint"}}],[5,"min","","Return the minimum",null,{"inputs":[{"name":"sizehint"},{"name":"sizehint"}],"output":{"name":"sizehint"}}],[6,"SizeHint","","**SizeHint** is the return type of **Iterator::size_hint()**.",null,null],[11,"from_ptr_len","itertools","Create a Stride iterator from a raw pointer.",40,null],[11,"from_ptr_len","","Create a StrideMut iterator from a raw pointer.",41,null],[11,"from_slice","","Create Stride iterator from a slice and the element step count.",40,null],[11,"from_stride","","Create Stride iterator from an existing Stride iterator",40,{"inputs":[{"name":"stride"},{"name":"stride"},{"name":"isize"}],"output":{"name":"stride"}}],[11,"swap_ends","","Swap the begin and end and reverse the stride,\nin effect reversing the iterator.",40,{"inputs":[{"name":"stride"}],"output":null}],[11,"len","","Return the number of elements in the iterator.",40,{"inputs":[{"name":"stride"}],"output":{"name":"usize"}}],[11,"next","","",40,{"inputs":[{"name":"stride"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"next_back","","",40,{"inputs":[{"name":"stride"}],"output":{"name":"option"}}],[11,"index","","Return a reference to the element at a given index.",40,{"inputs":[{"name":"stride"},{"name":"usize"}],"output":{"name":"a"}}],[11,"fmt","","",40,{"inputs":[{"name":"stride"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","",40,{"inputs":[{"name":"stride"}],"output":{"name":"usize"}}],[11,"get_unchecked","","",40,{"inputs":[{"name":"stride"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_slice","","Create Stride iterator from a slice and the element step count.",41,null],[11,"from_stride","","Create Stride iterator from an existing Stride iterator",41,{"inputs":[{"name":"stridemut"},{"name":"stridemut"},{"name":"isize"}],"output":{"name":"stridemut"}}],[11,"swap_ends","","Swap the begin and end and reverse the stride,\nin effect reversing the iterator.",41,{"inputs":[{"name":"stridemut"}],"output":null}],[11,"len","","Return the number of elements in the iterator.",41,{"inputs":[{"name":"stridemut"}],"output":{"name":"usize"}}],[11,"next","","",41,{"inputs":[{"name":"stridemut"}],"output":{"name":"option"}}],[11,"size_hint","","",41,null],[11,"next_back","","",41,{"inputs":[{"name":"stridemut"}],"output":{"name":"option"}}],[11,"index","","Return a reference to the element at a given index.",41,{"inputs":[{"name":"stridemut"},{"name":"usize"}],"output":{"name":"a"}}],[11,"fmt","","",41,{"inputs":[{"name":"stridemut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","",41,{"inputs":[{"name":"stridemut"}],"output":{"name":"usize"}}],[11,"get_unchecked","","",41,{"inputs":[{"name":"stridemut"},{"name":"usize"}],"output":{"name":"a"}}],[11,"clone","","",40,{"inputs":[{"name":"stride"}],"output":{"name":"stride"}}],[11,"index_mut","","Return a mutable reference to the element at a given index.",41,{"inputs":[{"name":"stridemut"},{"name":"usize"}],"output":{"name":"a"}}],[11,"next","","",42,{"inputs":[{"name":"tee"}],"output":{"name":"option"}}],[11,"size_hint","","",42,null],[11,"clone","","",43,{"inputs":[{"name":"ziplongest"}],"output":{"name":"ziplongest"}}],[11,"new","","Create a new `ZipLongest` iterator.",43,{"inputs":[{"name":"ziplongest"},{"name":"t"},{"name":"u"}],"output":{"name":"ziplongest"}}],[11,"next","","",43,{"inputs":[{"name":"ziplongest"}],"output":{"name":"option"}}],[11,"size_hint","","",43,null],[11,"next_back","","",43,{"inputs":[{"name":"ziplongest"}],"output":{"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"eitherorboth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"eitherorboth"},{"name":"eitherorboth"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"eitherorboth"},{"name":"eitherorboth"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"eitherorboth"}],"output":{"name":"eitherorboth"}}],[11,"clone","","",44,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"new","","Create a new `Zip` from a tuple of iterators.",44,{"inputs":[{"name":"zip"},{"name":"t"}],"output":{"name":"zip"}}],[11,"next","","",44,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"next","","",44,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"next","","",44,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"next","","",44,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"next","","",44,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"next","","",44,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"next","","",44,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"next","","",44,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"next","","",44,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"clone","","",45,{"inputs":[{"name":"zipslices"}],"output":{"name":"zipslices"}}],[11,"new","","Create a new `ZipSlices` from slices `a` and `b`.",45,null],[11,"from_slices","","Create a new `ZipSlices` from slices `a` and `b`.",45,{"inputs":[{"name":"zipslices"},{"name":"t"},{"name":"u"}],"output":{"name":"self"}}],[11,"next","","",45,{"inputs":[{"name":"zipslices"}],"output":{"name":"option"}}],[11,"size_hint","","",45,null],[11,"next_back","","",45,{"inputs":[{"name":"zipslices"}],"output":{"name":"option"}}],[6,"MapFn","","The function pointer map iterator created with `.map_fn()`.",null,null],[8,"Itertools","","The trait `Itertools`: extra iterator adaptors and methods for iterators.",null,null],[11,"interleave","","Alternate elements from two iterators until both\nrun out.",46,{"inputs":[{"name":"itertools"},{"name":"j"}],"output":{"name":"interleave"}}],[11,"interleave_shortest","","Alternate elements from two iterators until one of them runs out.",46,{"inputs":[{"name":"itertools"},{"name":"j"}],"output":{"name":"interleaveshortest"}}],[11,"intersperse","","An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.",46,{"inputs":[{"name":"itertools"},{"name":"item"}],"output":{"name":"intersperse"}}],[11,"zip_longest","","Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of two optional elements.",46,{"inputs":[{"name":"itertools"},{"name":"j"}],"output":{"name":"ziplongest"}}],[11,"batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator\nand may pick off as many elements as it likes, to produce the next iterator element.",46,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"batching"}}],[11,"group_by","","Group iterator elements. Consecutive elements that map to the same key (“runs”),\nare returned as the iterator elements of `GroupBy`.",46,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"groupby"}}],[11,"group_by_lazy","","Return an iterable that can group iterator elements.\nConsecutive elements that map to the same key (“runs”), are assigned\nto the same group.",46,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"groupbylazy"}}],[11,"chunks_lazy","","Return an iterable that can chunk the iterator.",46,{"inputs":[{"name":"itertools"},{"name":"usize"}],"output":{"name":"chunkslazy"}}],[11,"tee","","Split into an iterator pair that both yield all elements from\nthe original iterator.",46,null],[11,"slice","","Return a sliced iterator.",46,{"inputs":[{"name":"itertools"},{"name":"r"}],"output":{"name":"islice"}}],[11,"into_rc","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",46,{"inputs":[{"name":"itertools"}],"output":{"name":"rciter"}}],[11,"step","","Return an iterator adaptor that steps `n` elements in the base iterator\nfor each iteration.",46,{"inputs":[{"name":"itertools"},{"name":"usize"}],"output":{"name":"step"}}],[11,"merge","","Return an iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",46,{"inputs":[{"name":"itertools"},{"name":"j"}],"output":{"name":"merge"}}],[11,"merge_by","","Return an iterator adaptor that merges the two base iterators in order.\nThis is much like `.merge()` but allows for a custom ordering.",46,{"inputs":[{"name":"itertools"},{"name":"j"},{"name":"f"}],"output":{"name":"mergeby"}}],[11,"cartesian_product","","Return an iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators `self` and `J`.",46,{"inputs":[{"name":"itertools"},{"name":"j"}],"output":{"name":"product"}}],[11,"multipeek","","Return an iterator adapter that allows peeking multiple values.",46,{"inputs":[{"name":"itertools"}],"output":{"name":"multipeek"}}],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure to\noptionally merge together consecutive elements. For each pair the closure\nis passed the latest two elements, `x`, `y` and may return either `Ok(z)`\nto merge the two values or `Err((x, y))` to indicate they can't be merged.",46,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"coalesce"}}],[11,"dedup","","Remove duplicates from sections of consecutive identical elements.\nIf the iterator is sorted, all elements will be unique.",46,{"inputs":[{"name":"itertools"}],"output":{"name":"dedup"}}],[11,"unique","","Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration. Duplicates\nare detected using hash and equality.",46,{"inputs":[{"name":"itertools"}],"output":{"name":"unique"}}],[11,"unique_by","","Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration.",46,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"uniqueby"}}],[11,"mend_slices","","Return an iterator adaptor that joins together adjacent slices if possible.",46,{"inputs":[{"name":"itertools"}],"output":{"name":"mendslices"}}],[11,"take_while_ref","","Return an iterator adaptor that borrows from a `Clone`-able iterator\nto only pick off elements while the predicate `f` returns `true`.",46,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"takewhileref"}}],[11,"while_some","","Return an iterator adaptor that filters `Option<A>` iterator elements\nand produces `A`. Stops on the first `None` encountered.",46,{"inputs":[{"name":"itertools"}],"output":{"name":"whilesome"}}],[11,"combinations","","Return an iterator adaptor that iterates over the combinations of\nthe elements from an iterator.",46,{"inputs":[{"name":"itertools"}],"output":{"name":"combinations"}}],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a minimum length of\n`min` by filling missing elements using a closure `f`.",46,{"inputs":[{"name":"itertools"},{"name":"usize"},{"name":"f"}],"output":{"name":"padusing"}}],[11,"map_fn","","Like regular `.map()`, specialized to using a simple function pointer instead,\nso that the resulting `Map` iterator value can be cloned.",46,null],[11,"find_position","","Find the position and value of the first element satisfying a predicate.",46,{"inputs":[{"name":"itertools"},{"name":"p"}],"output":{"name":"option"}}],[11,"dropn","","Consume the first `n` elements of the iterator eagerly.",46,{"inputs":[{"name":"itertools"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,\nand return the same iterator again.",46,{"inputs":[{"name":"itertools"},{"name":"usize"}],"output":{"name":"self"}}],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,\nand return the same iterator again.",46,{"inputs":[{"name":"itertools"},{"name":"usize"}],"output":{"name":"self"}}],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",46,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":null}],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of `.collect()`,\nfor convenience.",46,{"inputs":[{"name":"itertools"}],"output":{"name":"vec"}}],[11,"set_from","","Assign to each reference in `self` from the `from` iterator,\nstopping at the shortest of the two iterators.",46,{"inputs":[{"name":"itertools"},{"name":"j"}],"output":{"name":"usize"}}],[11,"join","","Combine all iterator elements into one String, seperated by `sep`.",46,{"inputs":[{"name":"itertools"},{"name":"str"}],"output":{"name":"string"}}],[11,"format","","Format all iterator elements, separated by `sep`.",46,{"inputs":[{"name":"itertools"},{"name":"str"},{"name":"f"}],"output":{"name":"format"}}],[11,"fold_results","","Fold `Result` values from an iterator.",46,{"inputs":[{"name":"itertools"},{"name":"b"},{"name":"f"}],"output":{"name":"result"}}],[11,"fold_options","","Fold `Option` values from an iterator.",46,{"inputs":[{"name":"itertools"},{"name":"b"},{"name":"f"}],"output":{"name":"option"}}],[11,"fold1","","Accumulator of the elements in the iterator.",46,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"option"}}],[11,"is_empty_hint","","Tell if the iterator is empty or not according to its size hint.\nReturn `None` if the size hint does not tell, or return a `Some`\nvalue with the emptiness if it's possible to tell.",46,{"inputs":[{"name":"itertools"}],"output":{"name":"option"}}],[11,"sorted_by","","Collect all iterator elements into a sorted vector.",46,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"vec"}}],[11,"sort_by","","**Deprecated:** renamed to `.sorted_by()`",46,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"vec"}}],[14,"iproduct!","","Create an iterator over the “cartesian product” of iterators.",null,null],[14,"izip!","","Create an iterator running multiple iterators in lockstep.",null,null]],"paths":[[3,"RcIter"],[3,"Unfold"],[4,"EitherOrBoth"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"PutBack"],[3,"PutBackN"],[3,"Product"],[3,"Batching"],[3,"GroupBy"],[3,"Step"],[3,"Merge"],[3,"MergeBy"],[3,"MultiPeek"],[3,"Coalesce"],[3,"Dedup"],[3,"MendSlices"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Combinations"],[3,"UniqueBy"],[3,"Unique"],[3,"Format"],[3,"Groups"],[3,"Group"],[3,"Chunks"],[3,"Chunk"],[3,"Intersperse"],[3,"ISlice"],[3,"Linspace"],[8,"IntoIteratorTuple"],[8,"AppendTuple"],[8,"Slice"],[3,"FlatTuples"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"PadUsing"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Stride"],[3,"StrideMut"],[3,"Tee"],[3,"ZipLongest"],[3,"Zip"],[3,"ZipSlices"],[8,"Itertools"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Crate docs",null,null],[3,"utimbuf","","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",9,null],[12,"dli_fbase","","",9,null],[12,"dli_sname","","",9,null],[12,"dli_saddr","","",9,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",10,null],[12,"sa_data","","",10,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",11,null],[12,"sin_port","","",11,null],[12,"sin_addr","","",11,null],[12,"sin_zero","","",11,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",12,null],[12,"sin6_port","","",12,null],[12,"sin6_flowinfo","","",12,null],[12,"sin6_addr","","",12,null],[12,"sin6_scope_id","","",12,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",13,null],[12,"sun_path","","",13,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",14,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",15,null],[12,"ai_family","","",15,null],[12,"ai_socktype","","",15,null],[12,"ai_protocol","","",15,null],[12,"ai_addrlen","","",15,null],[12,"ai_addr","","",15,null],[12,"ai_canonname","","",15,null],[12,"ai_next","","",15,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",16,null],[12,"sll_protocol","","",16,null],[12,"sll_ifindex","","",16,null],[12,"sll_hatype","","",16,null],[12,"sll_pkttype","","",16,null],[12,"sll_halen","","",16,null],[12,"sll_addr","","",16,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",17,null],[12,"tm_min","","",17,null],[12,"tm_hour","","",17,null],[12,"tm_mday","","",17,null],[12,"tm_mon","","",17,null],[12,"tm_year","","",17,null],[12,"tm_wday","","",17,null],[12,"tm_yday","","",17,null],[12,"tm_isdst","","",17,null],[12,"tm_gmtoff","","",17,null],[12,"tm_zone","","",17,null],[3,"dirent","","",null,null],[12,"d_ino","","",18,null],[12,"d_off","","",18,null],[12,"d_reclen","","",18,null],[12,"d_type","","",18,null],[12,"d_name","","",18,null],[3,"dirent64","","",null,null],[12,"d_ino","","",19,null],[12,"d_off","","",19,null],[12,"d_reclen","","",19,null],[12,"d_type","","",19,null],[12,"d_name","","",19,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",20,null],[12,"rlim_max","","",20,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",21,null],[12,"gl_pathv","","",21,null],[12,"gl_offs","","",21,null],[12,"gl_flags","","",21,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",22,null],[12,"ifa_name","","",22,null],[12,"ifa_flags","","",22,null],[12,"ifa_addr","","",22,null],[12,"ifa_netmask","","",22,null],[12,"ifa_ifu","","",22,null],[12,"ifa_data","","",22,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",23,null],[12,"pw_passwd","","",23,null],[12,"pw_uid","","",23,null],[12,"pw_gid","","",23,null],[12,"pw_gecos","","",23,null],[12,"pw_dir","","",23,null],[12,"pw_shell","","",23,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",24,null],[12,"f_frsize","","",24,null],[12,"f_blocks","","",24,null],[12,"f_bfree","","",24,null],[12,"f_bavail","","",24,null],[12,"f_files","","",24,null],[12,"f_ffree","","",24,null],[12,"f_favail","","",24,null],[12,"f_fsid","","",24,null],[12,"f_flag","","",24,null],[12,"f_namemax","","",24,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",25,null],[12,"sa_mask","","",25,null],[12,"sa_flags","","",25,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",26,null],[12,"ss_flags","","",26,null],[12,"ss_size","","",26,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",27,null],[12,"si_errno","","",27,null],[12,"si_code","","",27,null],[12,"_pad","","",27,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",28,null],[12,"gl_pathv","","",28,null],[12,"gl_offs","","",28,null],[12,"gl_flags","","",28,null],[3,"sigset_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",29,null],[12,"st_ino","","",29,null],[12,"st_nlink","","",29,null],[12,"st_mode","","",29,null],[12,"st_uid","","",29,null],[12,"st_gid","","",29,null],[12,"st_rdev","","",29,null],[12,"st_size","","",29,null],[12,"st_blksize","","",29,null],[12,"st_blocks","","",29,null],[12,"st_atime","","",29,null],[12,"st_atime_nsec","","",29,null],[12,"st_mtime","","",29,null],[12,"st_mtime_nsec","","",29,null],[12,"st_ctime","","",29,null],[12,"st_ctime_nsec","","",29,null],[3,"stat64","","",null,null],[12,"st_dev","","",30,null],[12,"st_ino","","",30,null],[12,"st_nlink","","",30,null],[12,"st_mode","","",30,null],[12,"st_uid","","",30,null],[12,"st_gid","","",30,null],[12,"st_rdev","","",30,null],[12,"st_size","","",30,null],[12,"st_blksize","","",30,null],[12,"st_blocks","","",30,null],[12,"st_atime","","",30,null],[12,"st_atime_nsec","","",30,null],[12,"st_mtime","","",30,null],[12,"st_mtime_nsec","","",30,null],[12,"st_ctime","","",30,null],[12,"st_ctime_nsec","","",30,null],[3,"pthread_attr_t","","",null,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"putenv","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"usleep","","",null,null],[5,"recvfrom","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"mkfifo","","",null,null],[5,"getpwuid_r","","",null,null],[5,"posix_memalign","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"select","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"shm_open","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fstat64","","",null,null],[5,"stat64","","",null,null],[5,"open64","","",null,null],[5,"creat64","","",null,null],[5,"lseek64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"mmap64","","",null,null],[5,"lstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"readdir64_r","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"getnameinfo","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",31,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",31,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",31,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",31,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",31,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",31,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",31,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",31,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",31,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",31,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",31,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",31,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",31,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",31,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",31,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",31,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",31,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",31,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",31,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",31,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",31,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",31,null],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",31,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",31,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","core::num","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",32,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"eq","core::num::flt2dec::decoder","",33,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",34,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec","",35,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",35,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",35,null],[11,"clone","","",36,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",36,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",36,null],[11,"fmt","","",37,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",38,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",38,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",39,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",40,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",40,null],[11,"eq","","",41,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",42,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",42,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",42,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",43,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum","Makes a bignum from one digit.",44,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",44,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",44,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",44,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",44,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",44,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",44,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",44,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",44,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",44,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",44,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",44,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",44,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",44,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",44,null],[11,"eq","","",44,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",44,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",44,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",44,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",44,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum::tests","Makes a bignum from one digit.",45,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",45,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",45,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",45,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",45,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",45,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",45,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",45,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",45,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",45,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",45,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",45,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",45,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",45,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",45,null],[11,"eq","","",45,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",45,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",45,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",45,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",45,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num::diy_float","",46,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",46,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",46,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",46,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num","",47,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",47,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",48,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",48,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",48,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",49,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",49,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",49,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",50,null],[11,"fmt","","",50,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",50,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",50,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",50,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",50,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",50,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",50,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",50,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",50,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",50,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",50,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",51,null],[11,"get","","Dereferences the content.",51,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",51,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",51,null],[11,"fmt","","",51,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",52,null],[11,"clone","","",52,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",52,null],[11,"fmt","","",52,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",53,null],[11,"eq","","",53,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",53,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",53,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",53,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",53,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",54,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",54,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",55,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",55,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",56,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",57,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",58,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",58,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",58,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",58,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","libc","",59,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",59,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",59,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",59,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",59,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",59,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",59,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",60,null],[11,"fmt","","",60,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",60,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",61,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",62,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",63,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",64,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",65,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",61,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",61,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",61,null],[11,"swap","","Stores a value into the bool, returning the old value.",61,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",61,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",61,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",61,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",61,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",61,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",62,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",62,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",62,null],[11,"swap","","Stores a value into the isize, returning the old value.",62,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",62,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",62,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",62,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",62,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",62,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",62,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",63,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",63,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",63,null],[11,"swap","","Stores a value into the usize, returning the old value.",63,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",63,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",63,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",63,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",63,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",63,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",63,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",64,null],[11,"load","","Loads a value from the pointer.",64,null],[11,"store","","Stores a value into the pointer.",64,null],[11,"swap","","Stores a value into the pointer, returning the old value.",64,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",64,null],[11,"fmt","","",63,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",64,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",66,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",66,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",66,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",66,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",66,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",66,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",66,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",67,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",67,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",68,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",68,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",68,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",68,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",68,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",68,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",68,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",68,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",68,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",69,null],[11,"clone","","",69,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",70,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",70,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",70,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",70,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",71,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",71,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",72,null],[11,"deref","","",71,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",71,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",73,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",73,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",73,null],[11,"clone","core::char","",74,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",75,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",74,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"clone","","",76,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",77,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",76,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"clone","core::iter","",78,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",78,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"next_back","","",78,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",79,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",79,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[11,"next_back","","",79,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",80,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",80,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"clone","","",81,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",82,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",81,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",81,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",81,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",81,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",81,null],[11,"next_back","","",81,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",83,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",83,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",84,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",84,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next_back","","",84,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",85,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",85,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"next_back","","",85,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",86,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",86,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"next_back","","",86,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",87,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",87,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"nth","","",87,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",87,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",87,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",88,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",88,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",88,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",88,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",88,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",88,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",88,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",89,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"clone","","",90,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",90,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"clone","","",91,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",91,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",91,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",91,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",91,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"clone","","",92,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",92,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",92,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"clone","","",93,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",93,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"clone","","",94,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",94,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",95,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",95,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",95,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",95,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",95,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",96,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",96,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next_back","","",96,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",97,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",56,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",55,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",97,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"clone","","",98,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",98,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"next_back","","",98,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",97,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"next","core::ops","",55,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",56,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",99,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",99,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"next_back","","",99,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",100,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"next_back","","",100,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",100,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",100,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",100,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",101,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",101,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"next_back","","",101,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",101,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",31,null],[11,"fmt","","",31,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",31,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",31,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",31,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",31,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",31,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",102,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",102,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next_back","","",102,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",103,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"next_back","","",103,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",103,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",104,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"next_back","","",104,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",105,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",105,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"next_back","","",105,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",31,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",106,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",107,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",108,null],[11,"fmt","","",108,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",108,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",108,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",108,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",108,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",108,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",108,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",108,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",108,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",108,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",108,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",108,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",108,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",108,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",108,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",108,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",108,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",108,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",108,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",108,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",108,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",108,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",108,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",108,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",108,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",108,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",108,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",108,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",108,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",108,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",109,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"next_back","","",109,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",109,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",110,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"next_back","","",110,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",111,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",111,null],[11,"next_back","","",111,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",108,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",112,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",113,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",113,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",114,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",115,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",116,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",117,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",118,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",119,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",120,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",121,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",116,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",117,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",118,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",119,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",112,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",113,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",114,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",115,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",120,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",121,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",116,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",117,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",118,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",119,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",112,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",113,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",114,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",115,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",120,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",121,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",116,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",117,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",118,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",119,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",112,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",113,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",114,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",115,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",120,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",121,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",120,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",121,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",116,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",117,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",118,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",119,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",112,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",113,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",114,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",115,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",116,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",117,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",118,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",119,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",112,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",113,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",114,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",115,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",116,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",117,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",118,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",119,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",112,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",113,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",114,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",115,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",116,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",117,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",118,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",119,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",112,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",113,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",114,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",115,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",116,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",117,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",118,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",119,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",112,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",113,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",114,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",115,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",122,null],[11,"next","","",122,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"count","","",122,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",122,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",122,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",122,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",123,null],[11,"next","","",123,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",123,null],[11,"count","","",123,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",123,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",123,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",123,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",124,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",124,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",124,null],[11,"next_back","","",124,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",124,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",125,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",125,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",125,null],[11,"next_back","","",125,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",126,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",126,null],[11,"next","","",127,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"next","","",128,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",128,null],[11,"next","","",129,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",129,null],[11,"next","","",130,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",130,null],[11,"clone","","",131,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",131,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",131,null],[11,"count","","",131,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",131,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",131,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",131,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",132,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",132,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",132,null],[11,"count","","",132,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",132,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",132,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",132,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",133,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",133,null],[11,"count","","",133,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",133,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",133,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",133,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",134,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",134,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",135,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",136,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",135,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",135,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",135,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",137,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",137,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",137,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",137,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",137,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",137,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",137,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",137,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",138,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",138,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",138,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",138,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",138,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",138,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",138,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",138,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",139,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",139,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",139,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",139,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",139,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",139,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",139,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",139,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",140,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",140,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",141,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",142,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",142,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",140,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",140,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",140,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",140,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",140,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",143,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",144,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",144,null],[11,"matching","","",144,null],[11,"use_early_reject","","",145,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",145,null],[11,"matching","","",145,null],[11,"eq","core::str","",146,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",146,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",147,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",147,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",147,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",147,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",148,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",148,null],[11,"next_back","","",148,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",148,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",149,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",149,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",149,null],[11,"next_back","","",149,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",149,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",150,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",150,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",150,null],[11,"count","","",150,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",150,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",150,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",150,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",150,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",151,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",152,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",152,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",153,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",153,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",152,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",153,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",154,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",154,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",155,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",155,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",154,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",155,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",156,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",157,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",157,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",158,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",158,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",159,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",160,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",160,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",161,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",161,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",160,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",161,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",162,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",163,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",163,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",164,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",164,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",163,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",164,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",165,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",165,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",165,null],[11,"next_back","","",165,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",166,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",167,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",167,null],[11,"call_mut","","",167,null],[11,"call_once","","",167,null],[11,"next","","",166,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",166,null],[11,"next_back","","",166,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",168,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",169,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",169,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",169,null],[11,"finish","","",169,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",169,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",169,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",170,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",170,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",171,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",171,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",172,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",172,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",173,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",173,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",174,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",174,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",175,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",175,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",176,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",177,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",178,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",178,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",179,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",179,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",179,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",180,null],[11,"entry","","Adds a new entry to the set output.",181,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",181,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",181,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",182,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",182,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",182,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",183,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",183,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",183,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",184,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",185,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",186,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",186,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",187,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",188,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",189,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",189,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",190,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",191,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",192,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",192,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",193,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",193,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",193,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",193,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",193,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",193,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",193,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",193,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",193,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",193,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",193,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",193,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",193,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",193,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",193,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",193,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",193,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",193,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",193,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",193,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",193,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",189,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",53,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",66,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",71,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",194,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",194,null],[11,"clone","libc","",29,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",30,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",195,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",196,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","","",25,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",26,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",27,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",28,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",18,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",19,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",20,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",21,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",22,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",197,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",198,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",199,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",200,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",23,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",24,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",10,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",11,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",12,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",13,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",15,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",16,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",201,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",17,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[17,"WNOHANG","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"Dl_info"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"stat"],[3,"stat64"],[4,"Option"],[3,"Wrapping"],[3,"Decoded"],[4,"FullDecoded"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"Big32x40"],[3,"Big8x3"],[3,"Fp"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fd_set"]]};
initSearch(searchIndex);
